{"ast":null,"code":"import _regeneratorRuntime from \"D:/Code/Project/SSR/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Code/Project/SSR/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, onMounted } from 'vue';\nimport { Money, User, Warning, Stopwatch, ArrowUp, ArrowDown } from '@element-plus/icons-vue';\nimport * as echarts from 'echarts/core';\nimport { LineChart, PieChart } from 'echarts/charts';\nimport { GridComponent, TooltipComponent, TitleComponent, LegendComponent } from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport axios from 'axios';\n\n// 注册必需的组件\n\nexport default {\n  __name: 'Dashboard',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    echarts.use([LineChart, PieChart, GridComponent, TooltipComponent, TitleComponent, LegendComponent, CanvasRenderer]);\n    var chartContainer = ref(null);\n    var pieChartContainer = ref(null);\n\n    // 模拟数据\n    var chartData = {\n      months: ['一月', '二月', '三月', '四月', '五月', '六月'],\n      values: [4200000, 3900000, 4500000, 4800000, 5100000, 5280000]\n    };\n    var pieData = [{\n      value: 48.5,\n      name: '普通门诊'\n    }, {\n      value: 22.8,\n      name: '住院'\n    }, {\n      value: 14.2,\n      name: '特殊门诊'\n    }, {\n      value: 9.6,\n      name: '慢病门诊'\n    }, {\n      value: 4.9,\n      name: '其他'\n    }];\n\n    // 初始化图表\n    onMounted(function () {\n      // 初始化折线图\n      var lineChart = echarts.init(chartContainer.value);\n      lineChart.setOption({\n        title: {\n          text: '医保结算金额(元)',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b}: {c} 元'\n        },\n        xAxis: {\n          type: 'category',\n          data: chartData.months\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            formatter: function formatter(value) {\n              return value / 10000 + 'w';\n            }\n          }\n        },\n        series: [{\n          data: chartData.values,\n          type: 'line',\n          smooth: true,\n          lineStyle: {\n            width: 3,\n            color: '#409EFF'\n          },\n          areaStyle: {\n            color: {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: 'rgba(64, 158, 255, 0.4)'\n              }, {\n                offset: 1,\n                color: 'rgba(64, 158, 255, 0.1)'\n              }]\n            }\n          }\n        }]\n      });\n\n      // 初始化饼图\n      var pieChart = echarts.init(pieChartContainer.value);\n      pieChart.setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c}% ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          right: 10,\n          top: 'center'\n        },\n        series: [{\n          type: 'pie',\n          radius: ['40%', '70%'],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 10,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: {\n            show: false\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 16,\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: pieData\n        }]\n      });\n\n      // 窗口大小变化时重新调整图表\n      window.addEventListener('resize', function () {\n        lineChart.resize();\n        pieChart.resize();\n      });\n\n      // 模拟API调用\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n      function _fetchData() {\n        _fetchData = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  // 实际开发中替换为真实API\n                  // const response = await axios.get('/api/dashboard/stats')\n                  // console.log('获取到的数据:', response.data)\n                } catch (error) {\n                  console.error('获取数据失败:', error);\n                }\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        return _fetchData.apply(this, arguments);\n      }\n      fetchData();\n    });\n    var __returned__ = {\n      chartContainer: chartContainer,\n      pieChartContainer: pieChartContainer,\n      chartData: chartData,\n      pieData: pieData,\n      ref: ref,\n      onMounted: onMounted,\n      get Money() {\n        return Money;\n      },\n      get User() {\n        return User;\n      },\n      get Warning() {\n        return Warning;\n      },\n      get Stopwatch() {\n        return Stopwatch;\n      },\n      get ArrowUp() {\n        return ArrowUp;\n      },\n      get ArrowDown() {\n        return ArrowDown;\n      },\n      get echarts() {\n        return echarts;\n      },\n      get LineChart() {\n        return LineChart;\n      },\n      get PieChart() {\n        return PieChart;\n      },\n      get GridComponent() {\n        return GridComponent;\n      },\n      get TooltipComponent() {\n        return TooltipComponent;\n      },\n      get TitleComponent() {\n        return TitleComponent;\n      },\n      get LegendComponent() {\n        return LegendComponent;\n      },\n      get CanvasRenderer() {\n        return CanvasRenderer;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","Money","User","Warning","Stopwatch","ArrowUp","ArrowDown","echarts","LineChart","PieChart","GridComponent","TooltipComponent","TitleComponent","LegendComponent","CanvasRenderer","axios","use","chartContainer","pieChartContainer","chartData","months","values","pieData","value","name","lineChart","init","setOption","title","text","left","tooltip","trigger","formatter","xAxis","type","data","yAxis","axisLabel","series","smooth","lineStyle","width","color","areaStyle","x","y","x2","y2","colorStops","offset","pieChart","legend","orient","right","top","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","emphasis","fontSize","fontWeight","labelLine","window","addEventListener","resize","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","error","console","stop"],"sources":["D:/Code/Project/SSR/frontend/src/views/Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"24\">\r\n        <el-card shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>医保监管概览</span>\r\n            </div>\r\n          </template>\r\n          <el-row :gutter=\"20\">\r\n            <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\r\n              <div class=\"stat-card\">\r\n                <el-icon class=\"stat-icon\"><Money /></el-icon>\r\n                <div class=\"stat-content\">\r\n                  <div class=\"stat-title\">本月结算总额</div>\r\n                  <div class=\"stat-value\">¥ 5,284,762</div>\r\n                  <div class=\"stat-change up\">+12.5% <el-icon><ArrowUp /></el-icon></div>\r\n                </div>\r\n              </div>\r\n            </el-col>\r\n            <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\r\n              <div class=\"stat-card\">\r\n                <el-icon class=\"stat-icon\"><User /></el-icon>\r\n                <div class=\"stat-content\">\r\n                  <div class=\"stat-title\">就诊人次</div>\r\n                  <div class=\"stat-value\">28,493</div>\r\n                  <div class=\"stat-change up\">+8.2% <el-icon><ArrowUp /></el-icon></div>\r\n                </div>\r\n              </div>\r\n            </el-col>\r\n            <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\r\n              <div class=\"stat-card\">\r\n                <el-icon class=\"stat-icon\"><Warning /></el-icon>\r\n                <div class=\"stat-content\">\r\n                  <div class=\"stat-title\">异常记录</div>\r\n                  <div class=\"stat-value\">456</div>\r\n                  <div class=\"stat-change down\">-2.1% <el-icon><ArrowDown /></el-icon></div>\r\n                </div>\r\n              </div>\r\n            </el-col>\r\n            <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\r\n              <div class=\"stat-card\">\r\n                <el-icon class=\"stat-icon\"><Stopwatch /></el-icon>\r\n                <div class=\"stat-content\">\r\n                  <div class=\"stat-title\">平均就诊时长</div>\r\n                  <div class=\"stat-value\">47分钟</div>\r\n                  <div class=\"stat-change up\">+3.5% <el-icon><ArrowUp /></el-icon></div>\r\n                </div>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n    \r\n    <el-row :gutter=\"20\" class=\"mt-20\">\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>近6个月结算趋势</span>\r\n            </div>\r\n          </template>\r\n          <div ref=\"chartContainer\" style=\"height: 350px;\"></div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>医保支付分析</span>\r\n            </div>\r\n          </template>\r\n          <div ref=\"pieChartContainer\" style=\"height: 350px;\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { Money, User, Warning, Stopwatch, ArrowUp, ArrowDown } from '@element-plus/icons-vue'\r\nimport * as echarts from 'echarts/core'\r\nimport { LineChart, PieChart } from 'echarts/charts'\r\nimport { GridComponent, TooltipComponent, TitleComponent, LegendComponent } from 'echarts/components'\r\nimport { CanvasRenderer } from 'echarts/renderers'\r\nimport axios from 'axios'\r\n\r\n// 注册必需的组件\r\necharts.use([LineChart, PieChart, GridComponent, TooltipComponent, TitleComponent, LegendComponent, CanvasRenderer])\r\n\r\nconst chartContainer = ref(null)\r\nconst pieChartContainer = ref(null)\r\n\r\n// 模拟数据\r\nconst chartData = {\r\n  months: ['一月', '二月', '三月', '四月', '五月', '六月'],\r\n  values: [4200000, 3900000, 4500000, 4800000, 5100000, 5280000]\r\n}\r\n\r\nconst pieData = [\r\n  { value: 48.5, name: '普通门诊' },\r\n  { value: 22.8, name: '住院' },\r\n  { value: 14.2, name: '特殊门诊' },\r\n  { value: 9.6, name: '慢病门诊' },\r\n  { value: 4.9, name: '其他' }\r\n]\r\n\r\n// 初始化图表\r\nonMounted(() => {\r\n  // 初始化折线图\r\n  const lineChart = echarts.init(chartContainer.value)\r\n  lineChart.setOption({\r\n    title: {\r\n      text: '医保结算金额(元)',\r\n      left: 'center'\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      formatter: '{b}: {c} 元'\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: chartData.months\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      axisLabel: {\r\n        formatter: value => (value / 10000) + 'w'\r\n      }\r\n    },\r\n    series: [{\r\n      data: chartData.values,\r\n      type: 'line',\r\n      smooth: true,\r\n      lineStyle: {\r\n        width: 3,\r\n        color: '#409EFF'\r\n      },\r\n      areaStyle: {\r\n        color: {\r\n          type: 'linear',\r\n          x: 0, y: 0, x2: 0, y2: 1,\r\n          colorStops: [\r\n            { offset: 0, color: 'rgba(64, 158, 255, 0.4)' },\r\n            { offset: 1, color: 'rgba(64, 158, 255, 0.1)' }\r\n          ]\r\n        }\r\n      }\r\n    }]\r\n  })\r\n  \r\n  // 初始化饼图\r\n  const pieChart = echarts.init(pieChartContainer.value)\r\n  pieChart.setOption({\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: '{b}: {c}% ({d}%)'\r\n    },\r\n    legend: {\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 'center'\r\n    },\r\n    series: [{\r\n      type: 'pie',\r\n      radius: ['40%', '70%'],\r\n      avoidLabelOverlap: false,\r\n      itemStyle: {\r\n        borderRadius: 10,\r\n        borderColor: '#fff',\r\n        borderWidth: 2\r\n      },\r\n      label: {\r\n        show: false\r\n      },\r\n      emphasis: {\r\n        label: {\r\n          show: true,\r\n          fontSize: 16,\r\n          fontWeight: 'bold'\r\n        }\r\n      },\r\n      labelLine: {\r\n        show: false\r\n      },\r\n      data: pieData\r\n    }]\r\n  })\r\n  \r\n  // 窗口大小变化时重新调整图表\r\n  window.addEventListener('resize', () => {\r\n    lineChart.resize()\r\n    pieChart.resize()\r\n  })\r\n  \r\n  // 模拟API调用\r\n  async function fetchData() {\r\n    try {\r\n      // 实际开发中替换为真实API\r\n      // const response = await axios.get('/api/dashboard/stats')\r\n      // console.log('获取到的数据:', response.data)\r\n    } catch (error) {\r\n      console.error('获取数据失败:', error)\r\n    }\r\n  }\r\n  \r\n  fetchData()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-container {\r\n  padding: 20px;\r\n}\r\n\r\n.mt-20 {\r\n  margin-top: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n}\r\n\r\n.stat-card {\r\n  display: flex;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  background: #f9fafc;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 6px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.stat-icon {\r\n  font-size: 48px;\r\n  margin-right: 15px;\r\n  color: var(--el-color-primary);\r\n}\r\n\r\n.stat-content {\r\n  flex: 1;\r\n}\r\n\r\n.stat-title {\r\n  font-size: 14px;\r\n  color: #909399;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-change {\r\n  font-size: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.stat-change.up {\r\n  color: #67C23A;\r\n}\r\n\r\n.stat-change.down {\r\n  color: #F56C6C;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}