{"ast":null,"code":"import { getCurrentInstance, shallowRef, ref, watch } from 'vue';\nimport { useEventListener } from '@vueuse/core';\nfunction useFocusController(target) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    afterFocus = _ref.afterFocus,\n    afterBlur = _ref.afterBlur;\n  var instance = getCurrentInstance();\n  var emit = instance.emit;\n  var wrapperRef = shallowRef();\n  var isFocused = ref(false);\n  var handleFocus = function handleFocus(event) {\n    if (isFocused.value) return;\n    isFocused.value = true;\n    emit(\"focus\", event);\n    afterFocus == null ? void 0 : afterFocus();\n  };\n  var handleBlur = function handleBlur(event) {\n    var _a;\n    if (event.relatedTarget && ((_a = wrapperRef.value) == null ? void 0 : _a.contains(event.relatedTarget))) return;\n    isFocused.value = false;\n    emit(\"blur\", event);\n    afterBlur == null ? void 0 : afterBlur();\n  };\n  var handleClick = function handleClick() {\n    var _a;\n    (_a = target.value) == null ? void 0 : _a.focus();\n  };\n  watch(wrapperRef, function (el) {\n    if (el) {\n      el.setAttribute(\"tabindex\", \"-1\");\n    }\n  });\n  useEventListener(wrapperRef, \"click\", handleClick);\n  return {\n    wrapperRef: wrapperRef,\n    isFocused: isFocused,\n    handleFocus: handleFocus,\n    handleBlur: handleBlur\n  };\n}\nexport { useFocusController };","map":{"version":3,"names":["useFocusController","target","_ref","arguments","length","undefined","afterFocus","afterBlur","instance","getCurrentInstance","emit","wrapperRef","shallowRef","isFocused","ref","handleFocus","event","value","handleBlur","_a","relatedTarget","contains","handleClick","focus","watch","el","setAttribute","useEventListener"],"sources":["../../../../../packages/hooks/use-focus-controller/index.ts"],"sourcesContent":["import { getCurrentInstance, ref, shallowRef, watch } from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport type { ShallowRef } from 'vue'\n\ninterface UseFocusControllerOptions {\n  afterFocus?: () => void\n  afterBlur?: () => void\n}\n\nexport function useFocusController<T extends HTMLElement>(\n  target: ShallowRef<T | undefined>,\n  { afterFocus, afterBlur }: UseFocusControllerOptions = {}\n) {\n  const instance = getCurrentInstance()!\n  const { emit } = instance\n  const wrapperRef = shallowRef<HTMLElement>()\n  const isFocused = ref(false)\n\n  const handleFocus = (event: FocusEvent) => {\n    if (isFocused.value) return\n    isFocused.value = true\n    emit('focus', event)\n    afterFocus?.()\n  }\n\n  const handleBlur = (event: FocusEvent) => {\n    if (\n      event.relatedTarget &&\n      wrapperRef.value?.contains(event.relatedTarget as Node)\n    )\n      return\n\n    isFocused.value = false\n    emit('blur', event)\n    afterBlur?.()\n  }\n\n  const handleClick = () => {\n    target.value?.focus()\n  }\n\n  watch(wrapperRef, (el) => {\n    if (el) {\n      el.setAttribute('tabindex', '-1')\n    }\n  })\n\n  // TODO: using useEventListener will fail the test\n  // useEventListener(target, 'focus', handleFocus)\n  // useEventListener(target, 'blur', handleBlur)\n  useEventListener(wrapperRef, 'click', handleClick)\n\n  return {\n    wrapperRef,\n    isFocused,\n    handleFocus,\n    handleBlur,\n  }\n}\n"],"mappings":";;AAEO,SAASA,kBAAkBA,CAACC,MAAM,EAAkC;EAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAJ,EAAE;IAA5BG,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IAAEC,SAAS,GAAAL,IAAA,CAATK,SAAS;EAChE,IAAMC,QAAQ,GAAGC,kBAAkB,EAAE;EACrC,IAAQC,IAAI,GAAKF,QAAQ,CAAjBE,IAAI;EACZ,IAAMC,UAAU,GAAGC,UAAU,EAAE;EAC/B,IAAMC,SAAS,GAAGC,GAAG,CAAC,KAAK,CAAC;EAC5B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAK;IAC7B,IAAIH,SAAS,CAACI,KAAK,EACjB;IACFJ,SAAS,CAACI,KAAK,GAAG,IAAI;IACtBP,IAAI,CAAC,OAAO,EAAEM,KAAK,CAAC;IACpBV,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,EAAE;EAC9C,CAAG;EACD,IAAMY,UAAU,GAAG,SAAbA,UAAUA,CAAIF,KAAK,EAAK;IAC5B,IAAIG,EAAE;IACN,IAAIH,KAAK,CAACI,aAAa,KAAK,CAACD,EAAE,GAAGR,UAAU,CAACM,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGE,EAAE,CAACE,QAAQ,CAACL,KAAK,CAACI,aAAa,CAAC,CAAC,EACtG;IACFP,SAAS,CAACI,KAAK,GAAG,KAAK;IACvBP,IAAI,CAAC,MAAM,EAAEM,KAAK,CAAC;IACnBT,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,SAAS,EAAE;EAC5C,CAAG;EACD,IAAMe,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIH,EAAE;IACN,CAACA,EAAE,GAAGlB,MAAM,CAACgB,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGE,EAAE,CAACI,KAAK,EAAE;EACrD,CAAG;EACDC,KAAK,CAACb,UAAU,EAAE,UAACc,EAAE,EAAK;IACxB,IAAIA,EAAE,EAAE;MACNA,EAAE,CAACC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;IACvC;EACA,CAAG,CAAC;EACFC,gBAAgB,CAAChB,UAAU,EAAE,OAAO,EAAEW,WAAW,CAAC;EAClD,OAAO;IACLX,UAAU,EAAVA,UAAU;IACVE,SAAS,EAATA,SAAS;IACTE,WAAW,EAAXA,WAAW;IACXG,UAAU,EAAVA;EACJ,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}