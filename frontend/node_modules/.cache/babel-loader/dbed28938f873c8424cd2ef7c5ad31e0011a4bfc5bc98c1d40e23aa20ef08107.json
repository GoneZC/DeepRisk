{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport SockJS from 'sockjs-client';\nimport Stomp from 'webstomp-client';\nimport axios from 'axios';\n\n// 配置后端服务URL\naxios.defaults.baseURL = 'http://localhost:8083';\nexport default {\n  name: 'DataMonitor',\n  data: function data() {\n    return {\n      processedCount: 0,\n      ruleTriggeredCount: 0,\n      stompClient: null,\n      connected: false,\n      loading: false\n    };\n  },\n  mounted: function mounted() {\n    this.connectWebSocket();\n    this.getStatus();\n  },\n  methods: {\n    connectWebSocket: function connectWebSocket() {\n      var _this = this;\n      try {\n        var socket = new SockJS('http://localhost:8083/ws-data-collection');\n        this.stompClient = Stomp.over(socket);\n        this.stompClient.connect({}, function () {\n          _this.connected = true;\n\n          // 订阅状态更新\n          _this.stompClient.subscribe('/topic/collection-status', function (response) {\n            var statusUpdate = JSON.parse(response.body);\n            _this.processedCount = statusUpdate.processedCount;\n            _this.ruleTriggeredCount = statusUpdate.ruleTriggeredCount;\n          });\n        }, function (error) {\n          console.error('WebSocket连接错误:', error);\n          _this.connected = false;\n\n          // 5秒后自动重连\n          setTimeout(function () {\n            _this.connectWebSocket();\n          }, 5000);\n        });\n      } catch (e) {\n        console.error('WebSocket初始化错误:', e);\n      }\n    },\n    triggerCollection: function triggerCollection() {\n      var _this2 = this;\n      this.loading = true;\n      axios.post('/api/data-collection/collect').then(function (response) {\n        console.log('数据采集触发成功:', response.data);\n      })[\"catch\"](function (error) {\n        console.error('数据采集触发失败:', error);\n      })[\"finally\"](function () {\n        _this2.loading = false;\n      });\n    },\n    getStatus: function getStatus() {\n      var _this3 = this;\n      axios.get('/api/data-collection/status').then(function (response) {\n        _this3.processedCount = response.data.processedCount;\n        _this3.ruleTriggeredCount = response.data.ruleTriggeredCount;\n      })[\"catch\"](function (error) {\n        console.error('获取状态失败:', error);\n      });\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    if (this.stompClient && this.stompClient.connected) {\n      this.stompClient.disconnect();\n    }\n  }\n};","map":{"version":3,"names":["SockJS","Stomp","axios","defaults","baseURL","name","data","processedCount","ruleTriggeredCount","stompClient","connected","loading","mounted","connectWebSocket","getStatus","methods","_this","socket","over","connect","subscribe","response","statusUpdate","JSON","parse","body","error","console","setTimeout","e","triggerCollection","_this2","post","then","log","_this3","get","beforeUnmount","disconnect"],"sources":["D:\\Code\\Project\\Medical Insurance Anti-Fraud System\\frontend\\src\\views\\DataMonitor.vue"],"sourcesContent":["<template>\r\n  <div class=\"data-collection-monitor\">\r\n    <h2>数据采集实时监控</h2>\r\n    <div class=\"status-cards\">\r\n      <div class=\"status-card\">\r\n        <div class=\"card-title\">已处理数据</div>\r\n        <div class=\"card-value\">{{ processedCount }}</div>\r\n      </div>\r\n      <div class=\"status-card\">\r\n        <div class=\"card-title\">触发规则数据</div>\r\n        <div class=\"card-value\">{{ ruleTriggeredCount }}</div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"button-group\">\r\n      <el-button type=\"primary\" @click=\"triggerCollection\" :loading=\"loading\">\r\n        模拟数据采集\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'webstomp-client';\r\nimport axios from 'axios';\r\n\r\n// 配置后端服务URL\r\naxios.defaults.baseURL = 'http://localhost:8083';\r\n\r\nexport default {\r\n  name: 'DataMonitor',\r\n  data() {\r\n    return {\r\n      processedCount: 0,\r\n      ruleTriggeredCount: 0,\r\n      stompClient: null,\r\n      connected: false,\r\n      loading: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.connectWebSocket();\r\n    this.getStatus();\r\n  },\r\n  methods: {\r\n    connectWebSocket() {\r\n      try {\r\n        const socket = new SockJS('http://localhost:8083/ws-data-collection');\r\n        this.stompClient = Stomp.over(socket);\r\n        \r\n        this.stompClient.connect({}, () => {\r\n          this.connected = true;\r\n          \r\n          // 订阅状态更新\r\n          this.stompClient.subscribe('/topic/collection-status', response => {\r\n            const statusUpdate = JSON.parse(response.body);\r\n            this.processedCount = statusUpdate.processedCount;\r\n            this.ruleTriggeredCount = statusUpdate.ruleTriggeredCount;\r\n          });\r\n        }, error => {\r\n          console.error('WebSocket连接错误:', error);\r\n          this.connected = false;\r\n          \r\n          // 5秒后自动重连\r\n          setTimeout(() => {\r\n            this.connectWebSocket();\r\n          }, 5000);\r\n        });\r\n      } catch (e) {\r\n        console.error('WebSocket初始化错误:', e);\r\n      }\r\n    },\r\n    \r\n    triggerCollection() {\r\n      this.loading = true;\r\n      axios.post('/api/data-collection/collect')\r\n        .then(response => {\r\n          console.log('数据采集触发成功:', response.data);\r\n        })\r\n        .catch(error => {\r\n          console.error('数据采集触发失败:', error);\r\n        })\r\n        .finally(() => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n    \r\n    getStatus() {\r\n      axios.get('/api/data-collection/status')\r\n        .then(response => {\r\n          this.processedCount = response.data.processedCount;\r\n          this.ruleTriggeredCount = response.data.ruleTriggeredCount;\r\n        })\r\n        .catch(error => {\r\n          console.error('获取状态失败:', error);\r\n        });\r\n    }\r\n  },\r\n  beforeUnmount() {\r\n    if (this.stompClient && this.stompClient.connected) {\r\n      this.stompClient.disconnect();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.data-collection-monitor {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n.status-cards {\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n.status-card {\r\n  flex: 1;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  background-color: #f5f7fa;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n.card-title {\r\n  font-size: 16px;\r\n  color: #606266;\r\n  margin-bottom: 10px;\r\n}\r\n.card-value {\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  color: #409EFF;\r\n}\r\n.button-group {\r\n  margin-top: 20px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}