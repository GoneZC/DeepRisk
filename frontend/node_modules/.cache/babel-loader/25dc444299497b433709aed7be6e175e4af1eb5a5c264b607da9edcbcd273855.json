{"ast":null,"code":"import _regeneratorRuntime from \"D:/Code/Project/Medical Insurance Anti-Fraud System/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Code/Project/Medical Insurance Anti-Fraud System/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, reactive, onMounted } from 'vue';\nimport { Search, Refresh, Delete, Plus } from '@element-plus/icons-vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\n\n// 页面数据\n\nexport default {\n  __name: 'RuleEngine',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var loading = ref(false);\n    var submitLoading = ref(false);\n    var currentPage = ref(1);\n    var pageSize = ref(10);\n    var total = ref(0);\n    var ruleList = ref([]);\n    var ruleDialogVisible = ref(false);\n    var dialogTitle = ref('');\n    var ruleFormRef = ref(null);\n\n    // 查询参数\n    var queryParams = reactive({\n      ruleName: '',\n      ruleType: '',\n      status: ''\n    });\n\n    // 表单数据\n    var ruleForm = reactive({\n      ruleId: '',\n      ruleName: '',\n      ruleType: '',\n      description: '',\n      conditions: [],\n      riskLevel: '',\n      riskDescription: ''\n    });\n\n    // 表单验证规则\n    var rules = {\n      ruleName: [{\n        required: true,\n        message: '请输入规则名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 50,\n        message: '长度在 2 到 50 个字符',\n        trigger: 'blur'\n      }],\n      ruleType: [{\n        required: true,\n        message: '请选择规则类型',\n        trigger: 'change'\n      }],\n      description: [{\n        required: true,\n        message: '请输入规则描述',\n        trigger: 'blur'\n      }],\n      riskLevel: [{\n        required: true,\n        message: '请选择风险等级',\n        trigger: 'change'\n      }]\n    };\n\n    // 选项数据\n    var ruleTypeOptions = [{\n      value: '费用异常',\n      label: '费用异常'\n    }, {\n      value: '就诊行为异常',\n      label: '就诊行为异常'\n    }, {\n      value: '用药异常',\n      label: '用药异常'\n    }, {\n      value: '医生行为异常',\n      label: '医生行为异常'\n    }, {\n      value: '重复住院',\n      label: '重复住院'\n    }];\n    var statusOptions = [{\n      value: '启用',\n      label: '启用'\n    }, {\n      value: '禁用',\n      label: '禁用'\n    }];\n    var fieldOptions = [{\n      value: 'totalAmount',\n      label: '总费用'\n    }, {\n      value: 'drugCost',\n      label: '药品费用'\n    }, {\n      value: 'examCost',\n      label: '检查费用'\n    }, {\n      value: 'stayLength',\n      label: '住院天数'\n    }, {\n      value: 'diagnosisCount',\n      label: '诊断数量'\n    }, {\n      value: 'drugCount',\n      label: '药品数量'\n    }, {\n      value: 'visitCount',\n      label: '就诊次数'\n    }, {\n      value: 'daysBetweenVisits',\n      label: '就诊间隔'\n    }];\n    var operatorOptions = [{\n      value: '>',\n      label: '大于'\n    }, {\n      value: '>=',\n      label: '大于等于'\n    }, {\n      value: '<',\n      label: '小于'\n    }, {\n      value: '<=',\n      label: '小于等于'\n    }, {\n      value: '==',\n      label: '等于'\n    }, {\n      value: '!=',\n      label: '不等于'\n    }, {\n      value: 'contains',\n      label: '包含'\n    }, {\n      value: 'in',\n      label: '在列表中'\n    }];\n    var riskLevelOptions = [{\n      value: 'high',\n      label: '高风险'\n    }, {\n      value: 'medium',\n      label: '中风险'\n    }, {\n      value: 'low',\n      label: '低风险'\n    }];\n\n    // 初始化\n    onMounted(function () {\n      fetchRuleData();\n    });\n\n    // 获取规则数据\n    var fetchRuleData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              loading.value = true;\n              try {\n                // 模拟API调用\n                setTimeout(function () {\n                  ruleList.value = generateMockRuleData();\n                  total.value = 43;\n                  loading.value = false;\n                }, 800);\n              } catch (error) {\n                ElMessage.error('获取数据失败');\n                loading.value = false;\n              }\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function fetchRuleData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 生成模拟数据\n    var generateMockRuleData = function generateMockRuleData() {\n      var mockData = [];\n      var ruleTypes = ruleTypeOptions.map(function (option) {\n        return option.value;\n      });\n      var statuses = statusOptions.map(function (option) {\n        return option.value;\n      });\n      for (var i = 1; i <= 10; i++) {\n        var ruleType = ruleTypes[Math.floor(Math.random() * ruleTypes.length)];\n        var status = statuses[Math.floor(Math.random() * statuses.length)];\n        var createTime = new Date(2023, Math.floor(Math.random() * 12), Math.floor(Math.random() * 28) + 1);\n        mockData.push({\n          ruleId: 'R' + String(i).padStart(5, '0'),\n          ruleName: ruleType + '规则-' + i,\n          ruleType: ruleType,\n          description: '检测' + ruleType + '的规则，用于医保智能监管',\n          creator: ['张三', '李四', '王五'][Math.floor(Math.random() * 3)],\n          createTime: formatDate(createTime),\n          status: status,\n          hitCount: Math.floor(Math.random() * 1000)\n        });\n      }\n      return mockData;\n    };\n\n    // 创建规则\n    var createRule = function createRule() {\n      dialogTitle.value = '创建规则';\n      ruleForm.ruleId = '';\n      ruleForm.ruleName = '';\n      ruleForm.ruleType = '';\n      ruleForm.description = '';\n      ruleForm.conditions = [createEmptyCondition()];\n      ruleForm.riskLevel = '';\n      ruleForm.riskDescription = '';\n      ruleDialogVisible.value = true;\n    };\n\n    // 编辑规则\n    var editRule = function editRule(row) {\n      dialogTitle.value = '编辑规则';\n\n      // 复制规则数据到表单\n      ruleForm.ruleId = row.ruleId;\n      ruleForm.ruleName = row.ruleName;\n      ruleForm.ruleType = row.ruleType;\n      ruleForm.description = row.description;\n\n      // 生成一些模拟的条件数据\n      ruleForm.conditions = generateMockConditions();\n      ruleForm.riskLevel = ['high', 'medium', 'low'][Math.floor(Math.random() * 3)];\n      ruleForm.riskDescription = '当' + row.ruleType + '达到异常值时，判定为风险事件';\n      ruleDialogVisible.value = true;\n    };\n\n    // 删除规则\n    var deleteRule = function deleteRule(row) {\n      ElMessageBox.confirm(\"\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u89C4\\u5219 \\\"\".concat(row.ruleName, \"\\\" \\u5417\\uFF1F\"), '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        // 这里应该调用删除API\n        ElMessage({\n          type: 'success',\n          message: '删除成功'\n        });\n        fetchRuleData();\n      })[\"catch\"](function () {});\n    };\n\n    // 切换规则状态\n    var toggleStatus = function toggleStatus(row) {\n      var newStatus = row.status === '启用' ? '禁用' : '启用';\n      var actionText = newStatus === '启用' ? '启用' : '禁用';\n      ElMessageBox.confirm(\"\\u786E\\u5B9A\\u8981\".concat(actionText, \"\\u89C4\\u5219 \\\"\").concat(row.ruleName, \"\\\" \\u5417\\uFF1F\"), '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        // 这里应该调用API更新状态\n        row.status = newStatus;\n        ElMessage({\n          type: 'success',\n          message: \"\".concat(actionText, \"\\u6210\\u529F\")\n        });\n      })[\"catch\"](function () {});\n    };\n\n    // 提交规则\n    var submitRule = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (ruleFormRef.value) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              _context2.next = 4;\n              return ruleFormRef.value.validate(function (valid, fields) {\n                if (valid) {\n                  submitLoading.value = true;\n\n                  // 模拟提交\n                  setTimeout(function () {\n                    ElMessage.success(ruleForm.ruleId ? '更新规则成功' : '创建规则成功');\n                    ruleDialogVisible.value = false;\n                    submitLoading.value = false;\n                    fetchRuleData();\n                  }, 1000);\n                }\n              });\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function submitRule() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 条件操作\n    var createEmptyCondition = function createEmptyCondition() {\n      return {\n        field: '',\n        operator: '',\n        value: '',\n        logic: 'AND'\n      };\n    };\n    var addCondition = function addCondition() {\n      ruleForm.conditions.push(createEmptyCondition());\n    };\n    var removeCondition = function removeCondition(index) {\n      ruleForm.conditions.splice(index, 1);\n      if (ruleForm.conditions.length === 0) {\n        addCondition();\n      }\n    };\n\n    // 生成模拟条件\n    var generateMockConditions = function generateMockConditions() {\n      var count = Math.floor(Math.random() * 3) + 1;\n      var conditions = [];\n      for (var i = 0; i < count; i++) {\n        var fieldIndex = Math.floor(Math.random() * fieldOptions.length);\n        var field = fieldOptions[fieldIndex].value;\n        var operatorIndex = Math.floor(Math.random() * 4); // 只使用前4个操作符\n        var operator = operatorOptions[operatorIndex].value;\n        var value = void 0;\n        if (field === 'totalAmount' || field === 'drugCost' || field === 'examCost') {\n          value = (Math.random() * 10000 + 1000).toFixed(2);\n        } else {\n          value = Math.floor(Math.random() * 30 + 1).toString();\n        }\n        conditions.push({\n          field: field,\n          operator: operator,\n          value: value,\n          logic: i < count - 1 ? Math.random() > 0.5 ? 'AND' : 'OR' : 'AND'\n        });\n      }\n      return conditions;\n    };\n\n    // 查询处理\n    var handleSearch = function handleSearch() {\n      currentPage.value = 1;\n      fetchRuleData();\n    };\n\n    // 重置查询\n    var resetQuery = function resetQuery() {\n      Object.keys(queryParams).forEach(function (key) {\n        queryParams[key] = '';\n      });\n      currentPage.value = 1;\n      fetchRuleData();\n    };\n\n    // 分页处理\n    var handlePageChange = function handlePageChange(val) {\n      currentPage.value = val;\n      fetchRuleData();\n    };\n    var handleSizeChange = function handleSizeChange(val) {\n      pageSize.value = val;\n      currentPage.value = 1;\n      fetchRuleData();\n    };\n\n    // 辅助函数\n    var formatDate = function formatDate(date) {\n      return \"\".concat(date.getFullYear(), \"-\").concat(String(date.getMonth() + 1).padStart(2, '0'), \"-\").concat(String(date.getDate()).padStart(2, '0'));\n    };\n    var getRuleTypeTagType = function getRuleTypeTagType(type) {\n      switch (type) {\n        case '费用异常':\n          return 'danger';\n        case '就诊行为异常':\n          return 'warning';\n        case '用药异常':\n          return 'success';\n        default:\n          return 'info';\n      }\n    };\n    var __returned__ = {\n      loading: loading,\n      submitLoading: submitLoading,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      total: total,\n      ruleList: ruleList,\n      ruleDialogVisible: ruleDialogVisible,\n      dialogTitle: dialogTitle,\n      ruleFormRef: ruleFormRef,\n      queryParams: queryParams,\n      ruleForm: ruleForm,\n      rules: rules,\n      ruleTypeOptions: ruleTypeOptions,\n      statusOptions: statusOptions,\n      fieldOptions: fieldOptions,\n      operatorOptions: operatorOptions,\n      riskLevelOptions: riskLevelOptions,\n      fetchRuleData: fetchRuleData,\n      generateMockRuleData: generateMockRuleData,\n      createRule: createRule,\n      editRule: editRule,\n      deleteRule: deleteRule,\n      toggleStatus: toggleStatus,\n      submitRule: submitRule,\n      createEmptyCondition: createEmptyCondition,\n      addCondition: addCondition,\n      removeCondition: removeCondition,\n      generateMockConditions: generateMockConditions,\n      handleSearch: handleSearch,\n      resetQuery: resetQuery,\n      handlePageChange: handlePageChange,\n      handleSizeChange: handleSizeChange,\n      formatDate: formatDate,\n      getRuleTypeTagType: getRuleTypeTagType,\n      ref: ref,\n      reactive: reactive,\n      onMounted: onMounted,\n      get Search() {\n        return Search;\n      },\n      get Refresh() {\n        return Refresh;\n      },\n      get Delete() {\n        return Delete;\n      },\n      get Plus() {\n        return Plus;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","Search","Refresh","Delete","Plus","ElMessage","ElMessageBox","loading","submitLoading","currentPage","pageSize","total","ruleList","ruleDialogVisible","dialogTitle","ruleFormRef","queryParams","ruleName","ruleType","status","ruleForm","ruleId","description","conditions","riskLevel","riskDescription","rules","required","message","trigger","min","max","ruleTypeOptions","value","label","statusOptions","fieldOptions","operatorOptions","riskLevelOptions","fetchRuleData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","setTimeout","generateMockRuleData","error","stop","apply","arguments","mockData","ruleTypes","map","option","statuses","i","Math","floor","random","length","createTime","Date","push","String","padStart","creator","formatDate","hitCount","createRule","createEmptyCondition","editRule","row","generateMockConditions","deleteRule","confirm","concat","confirmButtonText","cancelButtonText","type","then","toggleStatus","newStatus","actionText","submitRule","_ref3","_callee2","_callee2$","_context2","abrupt","validate","valid","fields","success","field","operator","logic","addCondition","removeCondition","index","splice","count","fieldIndex","operatorIndex","toFixed","toString","handleSearch","resetQuery","Object","keys","forEach","key","handlePageChange","val","handleSizeChange","date","getFullYear","getMonth","getDate","getRuleTypeTagType"],"sources":["D:/Code/Project/Medical Insurance Anti-Fraud System/frontend/src/views/RuleEngine.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-card shadow=\"hover\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span class=\"title\">规则引擎</span>\r\n          <el-button type=\"primary\" @click=\"createRule\">创建规则</el-button>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 规则筛选表单 -->\r\n      <el-form :inline=\"true\" class=\"search-form\">\r\n        <el-form-item label=\"规则名称\">\r\n          <el-input v-model=\"queryParams.ruleName\" placeholder=\"请输入规则名称\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"规则类型\">\r\n          <el-select v-model=\"queryParams.ruleType\" placeholder=\"请选择\" clearable>\r\n            <el-option v-for=\"item in ruleTypeOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"queryParams.status\" placeholder=\"请选择\" clearable>\r\n            <el-option v-for=\"item in statusOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" :icon=\"Search\" @click=\"handleSearch\">查询</el-button>\r\n          <el-button :icon=\"Refresh\" @click=\"resetQuery\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 规则表格 -->\r\n      <el-table\r\n        v-loading=\"loading\"\r\n        :data=\"ruleList\"\r\n        border\r\n        stripe\r\n        style=\"width: 100%\"\r\n      >\r\n        <el-table-column prop=\"ruleId\" label=\"规则ID\" width=\"100\" />\r\n        <el-table-column prop=\"ruleName\" label=\"规则名称\" width=\"180\" show-overflow-tooltip />\r\n        <el-table-column prop=\"ruleType\" label=\"规则类型\" width=\"120\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getRuleTypeTagType(scope.row.ruleType)\">\r\n              {{ scope.row.ruleType }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"description\" label=\"规则描述\" min-width=\"200\" show-overflow-tooltip />\r\n        <el-table-column prop=\"creator\" label=\"创建人\" width=\"120\" />\r\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160\" />\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"scope.row.status === '启用' ? 'success' : 'info'\">\r\n              {{ scope.row.status }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"hitCount\" label=\"命中次数\" width=\"100\" align=\"right\" sortable />\r\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" link @click=\"editRule(scope.row)\">编辑</el-button>\r\n            <el-button type=\"success\" link @click=\"toggleStatus(scope.row)\" v-if=\"scope.row.status === '禁用'\">启用</el-button>\r\n            <el-button type=\"info\" link @click=\"toggleStatus(scope.row)\" v-else>禁用</el-button>\r\n            <el-button type=\"danger\" link @click=\"deleteRule(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页器 -->\r\n      <el-pagination\r\n        v-model:current-page=\"currentPage\"\r\n        v-model:page-size=\"pageSize\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        @size-change=\"handleSizeChange\"\r\n        class=\"pagination\"\r\n      />\r\n    </el-card>\r\n\r\n    <!-- 规则编辑对话框 -->\r\n    <el-dialog\r\n      v-model=\"ruleDialogVisible\"\r\n      :title=\"dialogTitle\"\r\n      width=\"65%\"\r\n      destroy-on-close\r\n    >\r\n      <el-form :model=\"ruleForm\" label-width=\"100px\" :rules=\"rules\" ref=\"ruleFormRef\">\r\n        <el-form-item label=\"规则名称\" prop=\"ruleName\">\r\n          <el-input v-model=\"ruleForm.ruleName\" placeholder=\"请输入规则名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"规则类型\" prop=\"ruleType\">\r\n          <el-select v-model=\"ruleForm.ruleType\" placeholder=\"请选择规则类型\">\r\n            <el-option v-for=\"item in ruleTypeOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"规则描述\" prop=\"description\">\r\n          <el-input v-model=\"ruleForm.description\" type=\"textarea\" rows=\"3\" placeholder=\"请输入规则描述\" />\r\n        </el-form-item>\r\n        \r\n        <el-divider content-position=\"center\">规则条件</el-divider>\r\n        \r\n        <div v-for=\"(condition, index) in ruleForm.conditions\" :key=\"index\" class=\"condition-item\">\r\n          <el-row :gutter=\"10\">\r\n            <el-col :span=\"1\" class=\"condition-index\">\r\n              <div class=\"condition-number\">{{ index + 1 }}</div>\r\n            </el-col>\r\n            <el-col :span=\"7\">\r\n              <el-form-item :prop=\"'conditions.' + index + '.field'\" :rules=\"{ required: true, message: '请选择字段', trigger: 'change' }\">\r\n                <el-select v-model=\"condition.field\" placeholder=\"选择字段\">\r\n                  <el-option v-for=\"field in fieldOptions\" :key=\"field.value\" :label=\"field.label\" :value=\"field.value\" />\r\n                </el-select>\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"5\">\r\n              <el-form-item :prop=\"'conditions.' + index + '.operator'\" :rules=\"{ required: true, message: '请选择操作符', trigger: 'change' }\">\r\n                <el-select v-model=\"condition.operator\" placeholder=\"选择操作符\">\r\n                  <el-option v-for=\"op in operatorOptions\" :key=\"op.value\" :label=\"op.label\" :value=\"op.value\" />\r\n                </el-select>\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"9\">\r\n              <el-form-item :prop=\"'conditions.' + index + '.value'\" :rules=\"{ required: true, message: '请输入值', trigger: 'blur' }\">\r\n                <el-input v-model=\"condition.value\" placeholder=\"输入值\" />\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"2\" class=\"condition-action\">\r\n              <el-button type=\"danger\" :icon=\"Delete\" circle @click=\"removeCondition(index)\" />\r\n            </el-col>\r\n          </el-row>\r\n          <el-row v-if=\"index < ruleForm.conditions.length - 1\">\r\n            <el-col :span=\"24\" class=\"condition-logic\">\r\n              <el-radio-group v-model=\"condition.logic\">\r\n                <el-radio label=\"AND\">并且(AND)</el-radio>\r\n                <el-radio label=\"OR\">或者(OR)</el-radio>\r\n              </el-radio-group>\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n        \r\n        <div class=\"add-condition\">\r\n          <el-button type=\"primary\" :icon=\"Plus\" @click=\"addCondition\">添加条件</el-button>\r\n        </div>\r\n        \r\n        <el-divider content-position=\"center\">规则动作</el-divider>\r\n        \r\n        <el-form-item label=\"风险等级\" prop=\"riskLevel\">\r\n          <el-select v-model=\"ruleForm.riskLevel\" placeholder=\"请选择风险等级\">\r\n            <el-option v-for=\"item in riskLevelOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"风险描述\" prop=\"riskDescription\">\r\n          <el-input v-model=\"ruleForm.riskDescription\" type=\"textarea\" rows=\"2\" placeholder=\"请输入风险描述\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"ruleDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitRule\" :loading=\"submitLoading\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { Search, Refresh, Delete, Plus } from '@element-plus/icons-vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\n\r\n// 页面数据\r\nconst loading = ref(false)\r\nconst submitLoading = ref(false)\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst total = ref(0)\r\nconst ruleList = ref([])\r\nconst ruleDialogVisible = ref(false)\r\nconst dialogTitle = ref('')\r\nconst ruleFormRef = ref(null)\r\n\r\n// 查询参数\r\nconst queryParams = reactive({\r\n  ruleName: '',\r\n  ruleType: '',\r\n  status: ''\r\n})\r\n\r\n// 表单数据\r\nconst ruleForm = reactive({\r\n  ruleId: '',\r\n  ruleName: '',\r\n  ruleType: '',\r\n  description: '',\r\n  conditions: [],\r\n  riskLevel: '',\r\n  riskDescription: ''\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  ruleName: [\r\n    { required: true, message: '请输入规则名称', trigger: 'blur' },\r\n    { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\r\n  ],\r\n  ruleType: [\r\n    { required: true, message: '请选择规则类型', trigger: 'change' }\r\n  ],\r\n  description: [\r\n    { required: true, message: '请输入规则描述', trigger: 'blur' }\r\n  ],\r\n  riskLevel: [\r\n    { required: true, message: '请选择风险等级', trigger: 'change' }\r\n  ]\r\n}\r\n\r\n// 选项数据\r\nconst ruleTypeOptions = [\r\n  { value: '费用异常', label: '费用异常' },\r\n  { value: '就诊行为异常', label: '就诊行为异常' },\r\n  { value: '用药异常', label: '用药异常' },\r\n  { value: '医生行为异常', label: '医生行为异常' },\r\n  { value: '重复住院', label: '重复住院' }\r\n]\r\n\r\nconst statusOptions = [\r\n  { value: '启用', label: '启用' },\r\n  { value: '禁用', label: '禁用' }\r\n]\r\n\r\nconst fieldOptions = [\r\n  { value: 'totalAmount', label: '总费用' },\r\n  { value: 'drugCost', label: '药品费用' },\r\n  { value: 'examCost', label: '检查费用' },\r\n  { value: 'stayLength', label: '住院天数' },\r\n  { value: 'diagnosisCount', label: '诊断数量' },\r\n  { value: 'drugCount', label: '药品数量' },\r\n  { value: 'visitCount', label: '就诊次数' },\r\n  { value: 'daysBetweenVisits', label: '就诊间隔' }\r\n]\r\n\r\nconst operatorOptions = [\r\n  { value: '>', label: '大于' },\r\n  { value: '>=', label: '大于等于' },\r\n  { value: '<', label: '小于' },\r\n  { value: '<=', label: '小于等于' },\r\n  { value: '==', label: '等于' },\r\n  { value: '!=', label: '不等于' },\r\n  { value: 'contains', label: '包含' },\r\n  { value: 'in', label: '在列表中' }\r\n]\r\n\r\nconst riskLevelOptions = [\r\n  { value: 'high', label: '高风险' },\r\n  { value: 'medium', label: '中风险' },\r\n  { value: 'low', label: '低风险' }\r\n]\r\n\r\n// 初始化\r\nonMounted(() => {\r\n  fetchRuleData()\r\n})\r\n\r\n// 获取规则数据\r\nconst fetchRuleData = async () => {\r\n  loading.value = true\r\n  try {\r\n    // 模拟API调用\r\n    setTimeout(() => {\r\n      ruleList.value = generateMockRuleData()\r\n      total.value = 43\r\n      loading.value = false\r\n    }, 800)\r\n  } catch (error) {\r\n    ElMessage.error('获取数据失败')\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 生成模拟数据\r\nconst generateMockRuleData = () => {\r\n  const mockData = []\r\n  const ruleTypes = ruleTypeOptions.map(option => option.value)\r\n  const statuses = statusOptions.map(option => option.value)\r\n  \r\n  for (let i = 1; i <= 10; i++) {\r\n    const ruleType = ruleTypes[Math.floor(Math.random() * ruleTypes.length)]\r\n    const status = statuses[Math.floor(Math.random() * statuses.length)]\r\n    const createTime = new Date(2023, Math.floor(Math.random() * 12), Math.floor(Math.random() * 28) + 1)\r\n    \r\n    mockData.push({\r\n      ruleId: 'R' + String(i).padStart(5, '0'),\r\n      ruleName: ruleType + '规则-' + i,\r\n      ruleType: ruleType,\r\n      description: '检测' + ruleType + '的规则，用于医保智能监管',\r\n      creator: ['张三', '李四', '王五'][Math.floor(Math.random() * 3)],\r\n      createTime: formatDate(createTime),\r\n      status: status,\r\n      hitCount: Math.floor(Math.random() * 1000)\r\n    })\r\n  }\r\n  return mockData\r\n}\r\n\r\n// 创建规则\r\nconst createRule = () => {\r\n  dialogTitle.value = '创建规则'\r\n  ruleForm.ruleId = ''\r\n  ruleForm.ruleName = ''\r\n  ruleForm.ruleType = ''\r\n  ruleForm.description = ''\r\n  ruleForm.conditions = [createEmptyCondition()]\r\n  ruleForm.riskLevel = ''\r\n  ruleForm.riskDescription = ''\r\n  ruleDialogVisible.value = true\r\n}\r\n\r\n// 编辑规则\r\nconst editRule = (row) => {\r\n  dialogTitle.value = '编辑规则'\r\n  \r\n  // 复制规则数据到表单\r\n  ruleForm.ruleId = row.ruleId\r\n  ruleForm.ruleName = row.ruleName\r\n  ruleForm.ruleType = row.ruleType\r\n  ruleForm.description = row.description\r\n  \r\n  // 生成一些模拟的条件数据\r\n  ruleForm.conditions = generateMockConditions()\r\n  \r\n  ruleForm.riskLevel = ['high', 'medium', 'low'][Math.floor(Math.random() * 3)]\r\n  ruleForm.riskDescription = '当' + row.ruleType + '达到异常值时，判定为风险事件'\r\n  \r\n  ruleDialogVisible.value = true\r\n}\r\n\r\n// 删除规则\r\nconst deleteRule = (row) => {\r\n  ElMessageBox.confirm(\r\n    `确定要删除规则 \"${row.ruleName}\" 吗？`,\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning'\r\n    }\r\n  ).then(() => {\r\n    // 这里应该调用删除API\r\n    ElMessage({\r\n      type: 'success',\r\n      message: '删除成功'\r\n    })\r\n    fetchRuleData()\r\n  }).catch(() => {})\r\n}\r\n\r\n// 切换规则状态\r\nconst toggleStatus = (row) => {\r\n  const newStatus = row.status === '启用' ? '禁用' : '启用'\r\n  const actionText = newStatus === '启用' ? '启用' : '禁用'\r\n  \r\n  ElMessageBox.confirm(\r\n    `确定要${actionText}规则 \"${row.ruleName}\" 吗？`,\r\n    '提示',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning'\r\n    }\r\n  ).then(() => {\r\n    // 这里应该调用API更新状态\r\n    row.status = newStatus\r\n    ElMessage({\r\n      type: 'success',\r\n      message: `${actionText}成功`\r\n    })\r\n  }).catch(() => {})\r\n}\r\n\r\n// 提交规则\r\nconst submitRule = async () => {\r\n  if (!ruleFormRef.value) return\r\n  \r\n  await ruleFormRef.value.validate((valid, fields) => {\r\n    if (valid) {\r\n      submitLoading.value = true\r\n      \r\n      // 模拟提交\r\n      setTimeout(() => {\r\n        ElMessage.success(ruleForm.ruleId ? '更新规则成功' : '创建规则成功')\r\n        ruleDialogVisible.value = false\r\n        submitLoading.value = false\r\n        fetchRuleData()\r\n      }, 1000)\r\n    }\r\n  })\r\n}\r\n\r\n// 条件操作\r\nconst createEmptyCondition = () => {\r\n  return {\r\n    field: '',\r\n    operator: '',\r\n    value: '',\r\n    logic: 'AND'\r\n  }\r\n}\r\n\r\nconst addCondition = () => {\r\n  ruleForm.conditions.push(createEmptyCondition())\r\n}\r\n\r\nconst removeCondition = (index) => {\r\n  ruleForm.conditions.splice(index, 1)\r\n  if (ruleForm.conditions.length === 0) {\r\n    addCondition()\r\n  }\r\n}\r\n\r\n// 生成模拟条件\r\nconst generateMockConditions = () => {\r\n  const count = Math.floor(Math.random() * 3) + 1\r\n  const conditions = []\r\n  \r\n  for (let i = 0; i < count; i++) {\r\n    const fieldIndex = Math.floor(Math.random() * fieldOptions.length)\r\n    const field = fieldOptions[fieldIndex].value\r\n    const operatorIndex = Math.floor(Math.random() * 4) // 只使用前4个操作符\r\n    const operator = operatorOptions[operatorIndex].value\r\n    \r\n    let value\r\n    if (field === 'totalAmount' || field === 'drugCost' || field === 'examCost') {\r\n      value = (Math.random() * 10000 + 1000).toFixed(2)\r\n    } else {\r\n      value = Math.floor(Math.random() * 30 + 1).toString()\r\n    }\r\n    \r\n    conditions.push({\r\n      field,\r\n      operator,\r\n      value,\r\n      logic: i < count - 1 ? (Math.random() > 0.5 ? 'AND' : 'OR') : 'AND'\r\n    })\r\n  }\r\n  \r\n  return conditions\r\n}\r\n\r\n// 查询处理\r\nconst handleSearch = () => {\r\n  currentPage.value = 1\r\n  fetchRuleData()\r\n}\r\n\r\n// 重置查询\r\nconst resetQuery = () => {\r\n  Object.keys(queryParams).forEach(key => {\r\n    queryParams[key] = ''\r\n  })\r\n  currentPage.value = 1\r\n  fetchRuleData()\r\n}\r\n\r\n// 分页处理\r\nconst handlePageChange = (val) => {\r\n  currentPage.value = val\r\n  fetchRuleData()\r\n}\r\n\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  currentPage.value = 1\r\n  fetchRuleData()\r\n}\r\n\r\n// 辅助函数\r\nconst formatDate = (date) => {\r\n  return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\r\n}\r\n\r\nconst getRuleTypeTagType = (type) => {\r\n  switch(type) {\r\n    case '费用异常':\r\n      return 'danger'\r\n    case '就诊行为异常':\r\n      return 'warning'\r\n    case '用药异常':\r\n      return 'success'\r\n    default:\r\n      return 'info'\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 2000px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.title {\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  color: var(--el-color-primary);\r\n}\r\n\r\n.search-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.condition-item {\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  background-color: #f8f8f8;\r\n  border-radius: 4px;\r\n}\r\n\r\n.condition-index {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.condition-number {\r\n  width: 22px;\r\n  height: 22px;\r\n  background-color: #409EFF;\r\n  color: white;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 12px;\r\n}\r\n\r\n.condition-action {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.condition-logic {\r\n  margin-top: 10px;\r\n  margin-left: 30px;\r\n}\r\n\r\n.add-condition {\r\n  margin: 20px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}