{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { defineComponent, computed, unref, reactive, toRefs, getCurrentInstance, onBeforeUnmount, nextTick, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, renderSlot, createElementVNode, toDisplayString, vShow } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { useOption } from './useOption.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar _sfc_main = defineComponent({\n  name: \"ElOption\",\n  componentName: \"ElOption\",\n  props: {\n    value: {\n      required: true,\n      type: [String, Number, Boolean, Object]\n    },\n    label: [String, Number],\n    created: Boolean,\n    disabled: Boolean\n  },\n  setup: function setup(props) {\n    var ns = useNamespace(\"select\");\n    var containerKls = computed(function () {\n      return [ns.be(\"dropdown\", \"item\"), ns.is(\"disabled\", unref(isDisabled)), {\n        selected: unref(itemSelected),\n        hover: unref(hover)\n      }];\n    });\n    var states = reactive({\n      index: -1,\n      groupDisabled: false,\n      visible: true,\n      hitState: false,\n      hover: false\n    });\n    var _useOption = useOption(props, states),\n      currentLabel = _useOption.currentLabel,\n      itemSelected = _useOption.itemSelected,\n      isDisabled = _useOption.isDisabled,\n      select = _useOption.select,\n      hoverItem = _useOption.hoverItem;\n    var _toRefs = toRefs(states),\n      visible = _toRefs.visible,\n      hover = _toRefs.hover;\n    var vm = getCurrentInstance().proxy;\n    select.onOptionCreate(vm);\n    onBeforeUnmount(function () {\n      var key = vm.value;\n      var selected = select.selected;\n      var selectedOptions = select.props.multiple ? selected : [selected];\n      var doesSelected = selectedOptions.some(function (item) {\n        return item.value === vm.value;\n      });\n      nextTick(function () {\n        if (select.cachedOptions.get(key) === vm && !doesSelected) {\n          select.cachedOptions[\"delete\"](key);\n        }\n      });\n      select.onOptionDestroy(key, vm);\n    });\n    function selectOptionClick() {\n      if (props.disabled !== true && states.groupDisabled !== true) {\n        select.handleOptionSelect(vm);\n      }\n    }\n    return {\n      ns: ns,\n      containerKls: containerKls,\n      currentLabel: currentLabel,\n      itemSelected: itemSelected,\n      isDisabled: isDisabled,\n      select: select,\n      hoverItem: hoverItem,\n      visible: visible,\n      hover: hover,\n      selectOptionClick: selectOptionClick,\n      states: states\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return withDirectives((openBlock(), createElementBlock(\"li\", {\n    \"class\": normalizeClass(_ctx.containerKls),\n    onMouseenter: _cache[0] || (_cache[0] = function () {\n      return _ctx.hoverItem && _ctx.hoverItem.apply(_ctx, arguments);\n    }),\n    onClick: _cache[1] || (_cache[1] = withModifiers(function () {\n      return _ctx.selectOptionClick && _ctx.selectOptionClick.apply(_ctx, arguments);\n    }, [\"stop\"]))\n  }, [renderSlot(_ctx.$slots, \"default\", {}, function () {\n    return [createElementVNode(\"span\", null, toDisplayString(_ctx.currentLabel), 1)];\n  })], 34)), [[vShow, _ctx.visible]]);\n}\nvar Option = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/select/src/option.vue\"]]);\nexport { Option as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","componentName","props","value","required","type","String","Number","Boolean","Object","label","created","disabled","setup","ns","useNamespace","containerKls","computed","be","is","unref","isDisabled","selected","itemSelected","hover","states","reactive","index","groupDisabled","visible","hitState","_useOption","useOption","currentLabel","select","hoverItem","_toRefs","toRefs","vm","getCurrentInstance","proxy","onOptionCreate","onBeforeUnmount","key","selectedOptions","multiple","doesSelected","some","item","nextTick","cachedOptions","get","onOptionDestroy","selectOptionClick","handleOptionSelect","createElementBlock","normalizeClass","_ctx","onMouseenter","_cache","apply","arguments","onClick","withModifiers","renderSlot","$slots","createElementVNode","toDisplayString"],"sources":["../../../../../../packages/components/select/src/option.vue"],"sourcesContent":["<template>\n  <li\n    v-show=\"visible\"\n    :class=\"containerKls\"\n    @mouseenter=\"hoverItem\"\n    @click.stop=\"selectOptionClick\"\n  >\n    <slot>\n      <span>{{ currentLabel }}</span>\n    </slot>\n  </li>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  nextTick,\n  onBeforeUnmount,\n  reactive,\n  toRefs,\n  unref,\n} from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useOption } from './useOption'\nimport type { SelectOptionProxy } from './token'\n\nexport default defineComponent({\n  name: 'ElOption',\n  componentName: 'ElOption',\n\n  props: {\n    /**\n     * @description value of option\n     */\n    value: {\n      required: true,\n      type: [String, Number, Boolean, Object],\n    },\n    /**\n     * @description label of option, same as `value` if omitted\n     */\n    label: [String, Number],\n    created: Boolean,\n    /**\n     * @description whether option is disabled\n     */\n    disabled: Boolean,\n  },\n\n  setup(props) {\n    const ns = useNamespace('select')\n\n    const containerKls = computed(() => [\n      ns.be('dropdown', 'item'),\n      ns.is('disabled', unref(isDisabled)),\n      {\n        selected: unref(itemSelected),\n        hover: unref(hover),\n      },\n    ])\n\n    const states = reactive({\n      index: -1,\n      groupDisabled: false,\n      visible: true,\n      hitState: false,\n      hover: false,\n    })\n\n    const { currentLabel, itemSelected, isDisabled, select, hoverItem } =\n      useOption(props, states)\n\n    const { visible, hover } = toRefs(states)\n\n    const vm = getCurrentInstance().proxy\n\n    select.onOptionCreate(vm as unknown as SelectOptionProxy)\n\n    onBeforeUnmount(() => {\n      const key = (vm as unknown as SelectOptionProxy).value\n      const { selected } = select\n      const selectedOptions = select.props.multiple ? selected : [selected]\n      const doesSelected = selectedOptions.some((item) => {\n        return item.value === (vm as unknown as SelectOptionProxy).value\n      })\n      // if option is not selected, remove it from cache\n      nextTick(() => {\n        if (select.cachedOptions.get(key) === vm && !doesSelected) {\n          select.cachedOptions.delete(key)\n        }\n      })\n      select.onOptionDestroy(key, vm)\n    })\n\n    function selectOptionClick() {\n      if (props.disabled !== true && states.groupDisabled !== true) {\n        select.handleOptionSelect(vm)\n      }\n    }\n\n    return {\n      ns,\n      containerKls,\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      hoverItem,\n      visible,\n      hover,\n      selectOptionClick,\n      states,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}