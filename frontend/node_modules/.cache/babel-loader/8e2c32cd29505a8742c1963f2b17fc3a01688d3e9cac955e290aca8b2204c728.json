{"ast":null,"code":"import _regeneratorRuntime from \"D:/Code/Project/Medical Insurance Anti-Fraud System/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Code/Project/Medical Insurance Anti-Fraud System/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, reactive, onMounted } from 'vue';\nimport { Search, Refresh } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\n\n// 数据加载状态\n\nexport default {\n  __name: 'OutpatientMonitor',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var loading = ref(false);\n\n    // 分页相关\n    var currentPage = ref(1);\n    var pageSize = ref(10);\n    var total = ref(0);\n\n    // 查询参数\n    var queryParams = reactive({\n      doctorId: '',\n      hospital: '',\n      community: ''\n    });\n    var dateRange = ref([]);\n\n    // 选项数据\n    var hospitalOptions = [{\n      value: 'H001',\n      label: '第一人民医院'\n    }, {\n      value: 'H002',\n      label: '中心医院'\n    }, {\n      value: 'H003',\n      label: '妇幼保健院'\n    }, {\n      value: 'H004',\n      label: '协和医院'\n    }];\n    var communityOptions = [{\n      value: 'C001',\n      label: '东湖社区'\n    }, {\n      value: 'C002',\n      label: '西山社区'\n    }, {\n      value: 'C003',\n      label: '南岭社区'\n    }, {\n      value: 'C004',\n      label: '北城社区'\n    }, {\n      value: 'C005',\n      label: '中央社区'\n    }];\n\n    // 医生列表数据\n    var doctorList = ref([]);\n\n    // 风险评估相关\n    var riskDialogVisible = ref(false);\n    var selectedDoctor = ref(null);\n    var riskScore = ref(0);\n\n    // 详情对话框相关\n    var detailsDialogVisible = ref(false);\n    var prescriptionList = ref([]);\n\n    // 初始化\n    onMounted(function () {\n      fetchDoctorData();\n    });\n\n    // 获取医生数据\n    var fetchDoctorData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              loading.value = true;\n              try {\n                // 模拟API调用\n                setTimeout(function () {\n                  doctorList.value = generateMockDoctorData();\n                  total.value = 85;\n                  loading.value = false;\n                }, 800);\n              } catch (error) {\n                ElMessage.error('获取数据失败');\n                loading.value = false;\n              }\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function fetchDoctorData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 生成模拟数据\n    var generateMockDoctorData = function generateMockDoctorData() {\n      var mockData = [];\n      for (var i = 1; i <= 10; i++) {\n        var hospitalIndex = Math.floor(Math.random() * hospitalOptions.length);\n        var hospitalCode = hospitalOptions[hospitalIndex].value;\n        var communityIndex = Math.floor(Math.random() * communityOptions.length);\n        var community = communityOptions[communityIndex].label;\n        var prescriptionCount = Math.floor(Math.random() * 200) + 50;\n        var totalCost = Math.random() * 100000 + 10000;\n        var lastDate = new Date();\n        lastDate.setDate(lastDate.getDate() - Math.floor(Math.random() * 30));\n\n        // 只有部分医生有风险评估结果\n        var hasFraudRisk = Math.random() > 0.6;\n        var fraudRisk = null;\n        if (hasFraudRisk) {\n          var _riskScore = Math.floor(Math.random() * 100);\n          fraudRisk = getRiskLevel(_riskScore);\n        }\n        mockData.push({\n          doctorId: 'D' + String(i + (currentPage.value - 1) * 10).padStart(4, '0'),\n          hospitalCode: hospitalCode,\n          community: community,\n          prescriptionCount: prescriptionCount,\n          totalCost: totalCost,\n          lastPrescriptionDate: formatDate(lastDate),\n          fraudRisk: fraudRisk\n        });\n      }\n      return mockData;\n    };\n\n    // 生成模拟处方数据\n    var generateMockPrescriptions = function generateMockPrescriptions(doctorId) {\n      var prescriptions = [];\n      var count = Math.floor(Math.random() * 10) + 5;\n      for (var i = 1; i <= count; i++) {\n        var date = new Date();\n        date.setDate(date.getDate() - Math.floor(Math.random() * 30));\n        prescriptions.push({\n          prescriptionId: 'P' + Math.floor(Math.random() * 1000000),\n          patientId: 'PT' + Math.floor(Math.random() * 100000),\n          doctorId: doctorId,\n          prescriptionDate: formatDate(date),\n          totalFee: Math.random() * 2000 + 100,\n          drugCount: Math.floor(Math.random() * 10) + 1,\n          diagnosis: ['高血压', '糖尿病', '感冒', '胃炎', '头痛', '腰椎间盘突出'][Math.floor(Math.random() * 6)]\n        });\n      }\n      return prescriptions;\n    };\n\n    // 风险评估处理\n    var handleRiskAssessment = function handleRiskAssessment(row) {\n      selectedDoctor.value = row;\n      riskScore.value = Math.floor(Math.random() * 100);\n      riskDialogVisible.value = true;\n    };\n\n    // 确认风险评估结果\n    var confirmRiskAssessment = function confirmRiskAssessment() {\n      var riskLevel = getRiskLevel(riskScore.value);\n      selectedDoctor.value.fraudRisk = riskLevel;\n\n      // 在实际列表中更新\n      var index = doctorList.value.findIndex(function (item) {\n        return item.doctorId === selectedDoctor.value.doctorId;\n      });\n      if (index !== -1) {\n        doctorList.value[index].fraudRisk = riskLevel;\n      }\n      ElMessage.success('风险评估完成');\n      riskDialogVisible.value = false;\n    };\n\n    // 查看详情\n    var viewDetails = function viewDetails(row) {\n      selectedDoctor.value = row;\n      prescriptionList.value = generateMockPrescriptions(row.doctorId);\n      detailsDialogVisible.value = true;\n    };\n\n    // 查询处理\n    var handleSearch = function handleSearch() {\n      currentPage.value = 1;\n      fetchDoctorData();\n    };\n\n    // 重置查询\n    var resetQuery = function resetQuery() {\n      Object.keys(queryParams).forEach(function (key) {\n        queryParams[key] = '';\n      });\n      dateRange.value = [];\n      currentPage.value = 1;\n      fetchDoctorData();\n    };\n\n    // 分页处理\n    var handlePageChange = function handlePageChange(val) {\n      currentPage.value = val;\n      fetchDoctorData();\n    };\n    var handleSizeChange = function handleSizeChange(val) {\n      pageSize.value = val;\n      currentPage.value = 1;\n      fetchDoctorData();\n    };\n\n    // 辅助函数\n    var formatDate = function formatDate(date) {\n      return \"\".concat(date.getFullYear(), \"-\").concat(String(date.getMonth() + 1).padStart(2, '0'), \"-\").concat(String(date.getDate()).padStart(2, '0'));\n    };\n    var formatCurrency = function formatCurrency(value) {\n      return parseFloat(value).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n    };\n    var getRiskLevel = function getRiskLevel(score) {\n      if (score >= 75) return '高风险';\n      if (score >= 50) return '中风险';\n      if (score >= 25) return '低风险';\n      return '正常';\n    };\n    var getRiskTagType = function getRiskTagType(level) {\n      if (level === '高风险') return 'danger';\n      if (level === '中风险') return 'warning';\n      if (level === '低风险') return 'success';\n      return 'info';\n    };\n    var getProgressColor = function getProgressColor(score) {\n      if (score >= 75) return '#F56C6C';\n      if (score >= 50) return '#E6A23C';\n      if (score >= 25) return '#67C23A';\n      return '#909399';\n    };\n    var __returned__ = {\n      loading: loading,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      total: total,\n      queryParams: queryParams,\n      dateRange: dateRange,\n      hospitalOptions: hospitalOptions,\n      communityOptions: communityOptions,\n      doctorList: doctorList,\n      riskDialogVisible: riskDialogVisible,\n      selectedDoctor: selectedDoctor,\n      riskScore: riskScore,\n      detailsDialogVisible: detailsDialogVisible,\n      prescriptionList: prescriptionList,\n      fetchDoctorData: fetchDoctorData,\n      generateMockDoctorData: generateMockDoctorData,\n      generateMockPrescriptions: generateMockPrescriptions,\n      handleRiskAssessment: handleRiskAssessment,\n      confirmRiskAssessment: confirmRiskAssessment,\n      viewDetails: viewDetails,\n      handleSearch: handleSearch,\n      resetQuery: resetQuery,\n      handlePageChange: handlePageChange,\n      handleSizeChange: handleSizeChange,\n      formatDate: formatDate,\n      formatCurrency: formatCurrency,\n      getRiskLevel: getRiskLevel,\n      getRiskTagType: getRiskTagType,\n      getProgressColor: getProgressColor,\n      ref: ref,\n      reactive: reactive,\n      onMounted: onMounted,\n      get Search() {\n        return Search;\n      },\n      get Refresh() {\n        return Refresh;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","Search","Refresh","ElMessage","loading","currentPage","pageSize","total","queryParams","doctorId","hospital","community","dateRange","hospitalOptions","value","label","communityOptions","doctorList","riskDialogVisible","selectedDoctor","riskScore","detailsDialogVisible","prescriptionList","fetchDoctorData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","setTimeout","generateMockDoctorData","error","stop","apply","arguments","mockData","i","hospitalIndex","Math","floor","random","length","hospitalCode","communityIndex","prescriptionCount","totalCost","lastDate","Date","setDate","getDate","hasFraudRisk","fraudRisk","getRiskLevel","push","String","padStart","lastPrescriptionDate","formatDate","generateMockPrescriptions","prescriptions","count","date","prescriptionId","patientId","prescriptionDate","totalFee","drugCount","diagnosis","handleRiskAssessment","row","confirmRiskAssessment","riskLevel","index","findIndex","item","success","viewDetails","handleSearch","resetQuery","Object","keys","forEach","key","handlePageChange","val","handleSizeChange","concat","getFullYear","getMonth","formatCurrency","parseFloat","toFixed","replace","score","getRiskTagType","level","getProgressColor"],"sources":["D:/Code/Project/Medical Insurance Anti-Fraud System/frontend/src/views/OutpatientMonitor.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-card shadow=\"hover\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span class=\"title\">门诊监管</span>\r\n          <el-tag type=\"success\">实时监控</el-tag>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 搜索表单 -->\r\n      <el-form :inline=\"true\" class=\"search-form\">\r\n        <el-form-item label=\"医生编号\">\r\n          <el-input v-model=\"queryParams.doctorId\" placeholder=\"请输入医生编号\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"医疗机构\">\r\n          <el-select v-model=\"queryParams.hospital\" placeholder=\"请选择\" clearable>\r\n            <el-option v-for=\"item in hospitalOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"所属社区\">\r\n          <el-select v-model=\"queryParams.community\" placeholder=\"请选择\" clearable>\r\n            <el-option v-for=\"item in communityOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"日期范围\">\r\n          <el-date-picker\r\n            v-model=\"dateRange\"\r\n            type=\"daterange\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n            format=\"YYYY-MM-DD\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" :icon=\"Search\" @click=\"handleSearch\">查询</el-button>\r\n          <el-button :icon=\"Refresh\" @click=\"resetQuery\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 数据表格 -->\r\n      <el-table\r\n        v-loading=\"loading\"\r\n        :data=\"doctorList\"\r\n        border\r\n        stripe\r\n        style=\"width: 100%\"\r\n      >\r\n        <el-table-column prop=\"doctorId\" label=\"医生编号\" width=\"120\" />\r\n        <el-table-column prop=\"hospitalCode\" label=\"医疗机构编号\" width=\"150\" />\r\n        <el-table-column prop=\"community\" label=\"所属社区\" width=\"150\" show-overflow-tooltip />\r\n        <el-table-column prop=\"prescriptionCount\" label=\"处方数量\" width=\"120\" align=\"right\" sortable />\r\n        <el-table-column prop=\"totalCost\" label=\"总花费(元)\" width=\"150\" align=\"right\" sortable>\r\n          <template #default=\"scope\">\r\n            <span>{{ formatCurrency(scope.row.totalCost) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"lastPrescriptionDate\" label=\"日期\" width=\"120\" />\r\n        <el-table-column prop=\"fraudRisk\" label=\"欺诈风险\" width=\"120\" align=\"center\">\r\n          <template #default=\"scope\">\r\n            <el-tag v-if=\"scope.row.fraudRisk\" :type=\"getRiskTagType(scope.row.fraudRisk)\">\r\n              {{ scope.row.fraudRisk }}\r\n            </el-tag>\r\n            <span v-else class=\"unassessed\">未评估</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" link @click=\"handleRiskAssessment(scope.row)\">风险评估</el-button>\r\n            <el-button type=\"success\" link @click=\"viewDetails(scope.row)\">查看详情</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页器 -->\r\n      <el-pagination\r\n        v-model:current-page=\"currentPage\"\r\n        v-model:page-size=\"pageSize\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        @size-change=\"handleSizeChange\"\r\n        class=\"pagination\"\r\n      />\r\n    </el-card>\r\n\r\n    <!-- 风险评估对话框 -->\r\n    <el-dialog\r\n      v-model=\"riskDialogVisible\"\r\n      title=\"风险评估\"\r\n      width=\"60%\"\r\n      destroy-on-close\r\n    >\r\n      <div v-if=\"selectedDoctor\" class=\"risk-assessment\">\r\n        <div class=\"doctor-info\">\r\n          <h3>医生信息</h3>\r\n          <p><strong>医生编号:</strong> {{ selectedDoctor.doctorId }}</p>\r\n          <p><strong>医疗机构:</strong> {{ selectedDoctor.hospitalCode }}</p>\r\n          <p><strong>所属社区:</strong> {{ selectedDoctor.community }}</p>\r\n          <p><strong>处方数量:</strong> {{ selectedDoctor.prescriptionCount }}</p>\r\n          <p><strong>总费用:</strong> {{ formatCurrency(selectedDoctor.totalCost) }}元</p>\r\n        </div>\r\n        \r\n        <el-divider />\r\n        \r\n        <div class=\"risk-result\">\r\n          <h3>风险评估结果</h3>\r\n          <el-row :gutter=\"20\" class=\"risk-score-row\">\r\n            <el-col :span=\"24\">\r\n              <div class=\"risk-score-container\">\r\n                <div class=\"risk-score-label\">风险评分</div>\r\n                <div class=\"risk-score-value\">{{ riskScore }}</div>\r\n                <el-progress \r\n                  :percentage=\"riskScore\" \r\n                  :color=\"getProgressColor(riskScore)\"\r\n                  :format=\"() => ''\"\r\n                  :stroke-width=\"20\"\r\n                />\r\n                <div class=\"risk-level\">\r\n                  风险等级: \r\n                  <el-tag :type=\"getRiskTagType(getRiskLevel(riskScore))\">\r\n                    {{ getRiskLevel(riskScore) }}\r\n                  </el-tag>\r\n                </div>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n          \r\n          <el-divider />\r\n          \r\n          <el-button type=\"primary\" @click=\"confirmRiskAssessment\">确认评估结果</el-button>\r\n          <el-button @click=\"riskDialogVisible = false\">取消</el-button>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n    \r\n    <!-- 详情对话框 -->\r\n    <el-dialog\r\n      v-model=\"detailsDialogVisible\"\r\n      title=\"门诊详情\"\r\n      width=\"70%\"\r\n      destroy-on-close\r\n    >\r\n      <div v-if=\"selectedDoctor\" class=\"doctor-details\">\r\n        <div class=\"details-header\">\r\n          <h3>基本信息</h3>\r\n          <el-descriptions :column=\"3\" border>\r\n            <el-descriptions-item label=\"医生编号\">{{ selectedDoctor.doctorId }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"医疗机构编号\">{{ selectedDoctor.hospitalCode }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"所属社区\">{{ selectedDoctor.community }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"处方数量\">{{ selectedDoctor.prescriptionCount }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"总花费\">{{ formatCurrency(selectedDoctor.totalCost) }}元</el-descriptions-item>\r\n            <el-descriptions-item label=\"日期\">{{ selectedDoctor.lastPrescriptionDate }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"欺诈风险\" :span=\"3\">\r\n              <el-tag v-if=\"selectedDoctor.fraudRisk\" :type=\"getRiskTagType(selectedDoctor.fraudRisk)\">\r\n                {{ selectedDoctor.fraudRisk }}\r\n              </el-tag>\r\n              <span v-else class=\"unassessed\">未评估</span>\r\n            </el-descriptions-item>\r\n          </el-descriptions>\r\n        </div>\r\n        \r\n        <el-divider />\r\n        \r\n        <div class=\"prescription-list\">\r\n          <h3>处方列表</h3>\r\n          <el-table :data=\"prescriptionList\" border stripe>\r\n            <el-table-column prop=\"prescriptionId\" label=\"处方编号\" width=\"150\" />\r\n            <el-table-column prop=\"patientId\" label=\"患者ID\" width=\"120\" />\r\n            <el-table-column prop=\"prescriptionDate\" label=\"处方日期\" width=\"120\" />\r\n            <el-table-column prop=\"totalFee\" label=\"金额(元)\" width=\"120\" align=\"right\">\r\n              <template #default=\"scope\">\r\n                {{ formatCurrency(scope.row.totalFee) }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"drugCount\" label=\"药品数量\" width=\"100\" align=\"center\" />\r\n            <el-table-column prop=\"diagnosis\" label=\"诊断\" min-width=\"200\" show-overflow-tooltip />\r\n          </el-table>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { Search, Refresh } from '@element-plus/icons-vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n// 数据加载状态\r\nconst loading = ref(false)\r\n\r\n// 分页相关\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst total = ref(0)\r\n\r\n// 查询参数\r\nconst queryParams = reactive({\r\n  doctorId: '',\r\n  hospital: '',\r\n  community: ''\r\n})\r\nconst dateRange = ref([])\r\n\r\n// 选项数据\r\nconst hospitalOptions = [\r\n  { value: 'H001', label: '第一人民医院' },\r\n  { value: 'H002', label: '中心医院' },\r\n  { value: 'H003', label: '妇幼保健院' },\r\n  { value: 'H004', label: '协和医院' }\r\n]\r\n\r\nconst communityOptions = [\r\n  { value: 'C001', label: '东湖社区' },\r\n  { value: 'C002', label: '西山社区' },\r\n  { value: 'C003', label: '南岭社区' },\r\n  { value: 'C004', label: '北城社区' },\r\n  { value: 'C005', label: '中央社区' }\r\n]\r\n\r\n// 医生列表数据\r\nconst doctorList = ref([])\r\n\r\n// 风险评估相关\r\nconst riskDialogVisible = ref(false)\r\nconst selectedDoctor = ref(null)\r\nconst riskScore = ref(0)\r\n\r\n// 详情对话框相关\r\nconst detailsDialogVisible = ref(false)\r\nconst prescriptionList = ref([])\r\n\r\n// 初始化\r\nonMounted(() => {\r\n  fetchDoctorData()\r\n})\r\n\r\n// 获取医生数据\r\nconst fetchDoctorData = async () => {\r\n  loading.value = true\r\n  try {\r\n    // 模拟API调用\r\n    setTimeout(() => {\r\n      doctorList.value = generateMockDoctorData()\r\n      total.value = 85\r\n      loading.value = false\r\n    }, 800)\r\n  } catch (error) {\r\n    ElMessage.error('获取数据失败')\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 生成模拟数据\r\nconst generateMockDoctorData = () => {\r\n  const mockData = []\r\n  \r\n  for (let i = 1; i <= 10; i++) {\r\n    const hospitalIndex = Math.floor(Math.random() * hospitalOptions.length)\r\n    const hospitalCode = hospitalOptions[hospitalIndex].value\r\n    const communityIndex = Math.floor(Math.random() * communityOptions.length)\r\n    const community = communityOptions[communityIndex].label\r\n    \r\n    const prescriptionCount = Math.floor(Math.random() * 200) + 50\r\n    const totalCost = Math.random() * 100000 + 10000\r\n    \r\n    const lastDate = new Date()\r\n    lastDate.setDate(lastDate.getDate() - Math.floor(Math.random() * 30))\r\n    \r\n    // 只有部分医生有风险评估结果\r\n    const hasFraudRisk = Math.random() > 0.6\r\n    let fraudRisk = null\r\n    if (hasFraudRisk) {\r\n      const riskScore = Math.floor(Math.random() * 100)\r\n      fraudRisk = getRiskLevel(riskScore)\r\n    }\r\n    \r\n    mockData.push({\r\n      doctorId: 'D' + String(i + (currentPage.value - 1) * 10).padStart(4, '0'),\r\n      hospitalCode: hospitalCode,\r\n      community: community,\r\n      prescriptionCount: prescriptionCount,\r\n      totalCost: totalCost,\r\n      lastPrescriptionDate: formatDate(lastDate),\r\n      fraudRisk: fraudRisk\r\n    })\r\n  }\r\n  \r\n  return mockData\r\n}\r\n\r\n// 生成模拟处方数据\r\nconst generateMockPrescriptions = (doctorId) => {\r\n  const prescriptions = []\r\n  const count = Math.floor(Math.random() * 10) + 5\r\n  \r\n  for (let i = 1; i <= count; i++) {\r\n    const date = new Date()\r\n    date.setDate(date.getDate() - Math.floor(Math.random() * 30))\r\n    \r\n    prescriptions.push({\r\n      prescriptionId: 'P' + Math.floor(Math.random() * 1000000),\r\n      patientId: 'PT' + Math.floor(Math.random() * 100000),\r\n      doctorId: doctorId,\r\n      prescriptionDate: formatDate(date),\r\n      totalFee: Math.random() * 2000 + 100,\r\n      drugCount: Math.floor(Math.random() * 10) + 1,\r\n      diagnosis: ['高血压', '糖尿病', '感冒', '胃炎', '头痛', '腰椎间盘突出'][Math.floor(Math.random() * 6)]\r\n    })\r\n  }\r\n  \r\n  return prescriptions\r\n}\r\n\r\n// 风险评估处理\r\nconst handleRiskAssessment = (row) => {\r\n  selectedDoctor.value = row\r\n  riskScore.value = Math.floor(Math.random() * 100)\r\n  riskDialogVisible.value = true\r\n}\r\n\r\n// 确认风险评估结果\r\nconst confirmRiskAssessment = () => {\r\n  const riskLevel = getRiskLevel(riskScore.value)\r\n  selectedDoctor.value.fraudRisk = riskLevel\r\n  \r\n  // 在实际列表中更新\r\n  const index = doctorList.value.findIndex(item => item.doctorId === selectedDoctor.value.doctorId)\r\n  if (index !== -1) {\r\n    doctorList.value[index].fraudRisk = riskLevel\r\n  }\r\n  \r\n  ElMessage.success('风险评估完成')\r\n  riskDialogVisible.value = false\r\n}\r\n\r\n// 查看详情\r\nconst viewDetails = (row) => {\r\n  selectedDoctor.value = row\r\n  prescriptionList.value = generateMockPrescriptions(row.doctorId)\r\n  detailsDialogVisible.value = true\r\n}\r\n\r\n// 查询处理\r\nconst handleSearch = () => {\r\n  currentPage.value = 1\r\n  fetchDoctorData()\r\n}\r\n\r\n// 重置查询\r\nconst resetQuery = () => {\r\n  Object.keys(queryParams).forEach(key => {\r\n    queryParams[key] = ''\r\n  })\r\n  dateRange.value = []\r\n  currentPage.value = 1\r\n  fetchDoctorData()\r\n}\r\n\r\n// 分页处理\r\nconst handlePageChange = (val) => {\r\n  currentPage.value = val\r\n  fetchDoctorData()\r\n}\r\n\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  currentPage.value = 1\r\n  fetchDoctorData()\r\n}\r\n\r\n// 辅助函数\r\nconst formatDate = (date) => {\r\n  return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\r\n}\r\n\r\nconst formatCurrency = (value) => {\r\n  return parseFloat(value).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\r\n}\r\n\r\nconst getRiskLevel = (score) => {\r\n  if (score >= 75) return '高风险'\r\n  if (score >= 50) return '中风险'\r\n  if (score >= 25) return '低风险'\r\n  return '正常'\r\n}\r\n\r\nconst getRiskTagType = (level) => {\r\n  if (level === '高风险') return 'danger'\r\n  if (level === '中风险') return 'warning'\r\n  if (level === '低风险') return 'success'\r\n  return 'info'\r\n}\r\n\r\nconst getProgressColor = (score) => {\r\n  if (score >= 75) return '#F56C6C'\r\n  if (score >= 50) return '#E6A23C'\r\n  if (score >= 25) return '#67C23A'\r\n  return '#909399'\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 2000px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.title {\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  color: var(--el-color-primary);\r\n}\r\n\r\n.search-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.unassessed {\r\n  color: #909399;\r\n  font-style: italic;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.risk-assessment {\r\n  padding: 10px;\r\n}\r\n\r\n.doctor-info {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.doctor-info h3 {\r\n  margin: 0 0 10px 0;\r\n  color: #303133;\r\n}\r\n\r\n.doctor-info p {\r\n  margin: 5px 0;\r\n  color: #606266;\r\n}\r\n\r\n.risk-score-container {\r\n  text-align: center;\r\n  padding: 20px;\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n}\r\n\r\n.risk-score-label {\r\n  font-size: 16px;\r\n  color: #606266;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.risk-score-value {\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.risk-level {\r\n  margin-top: 10px;\r\n  font-size: 16px;\r\n  color: #606266;\r\n}\r\n\r\n.doctor-details h3 {\r\n  margin: 0 0 20px 0;\r\n  color: #303133;\r\n}\r\n\r\n.prescription-list {\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}