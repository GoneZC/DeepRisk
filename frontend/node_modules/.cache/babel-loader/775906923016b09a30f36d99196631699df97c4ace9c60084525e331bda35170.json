{"ast":null,"code":"import _objectSpread from \"D:/Code/Project/Medical Insurance Anti-Fraud System/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"D:/Code/Project/Medical Insurance Anti-Fraud System/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Code/Project/Medical Insurance Anti-Fraud System/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, reactive, onMounted } from 'vue';\nimport { Search, Refresh } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\n\n// 状态数据\n\nexport default {\n  __name: 'GroupFraudDetection',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var loading = ref(false);\n    var currentPage = ref(1);\n    var pageSize = ref(9);\n    var total = ref(0);\n    var fraudGroups = ref([]);\n    var dateRange = ref([]);\n    var detailsVisible = ref(false);\n    var selectedGroupDetails = ref(null);\n\n    // 查询参数\n    var queryParams = reactive({\n      hospital: '',\n      fraudType: '',\n      riskLevel: '',\n      startDate: '',\n      endDate: ''\n    });\n\n    // 选项数据\n    var hospitalOptions = [{\n      value: 'H001',\n      label: '第一人民医院'\n    }, {\n      value: 'H002',\n      label: '中心医院'\n    }, {\n      value: 'H003',\n      label: '妇幼保健院'\n    }, {\n      value: 'H004',\n      label: '协和医院'\n    }];\n    var fraudTypeOptions = [{\n      value: '虚假住院',\n      label: '虚假住院'\n    }, {\n      value: '药品回扣',\n      label: '药品回扣'\n    }, {\n      value: '过度医疗',\n      label: '过度医疗'\n    }, {\n      value: '分解住院',\n      label: '分解住院'\n    }];\n    var riskLevelOptions = [{\n      value: '高风险',\n      label: '高风险'\n    }, {\n      value: '中风险',\n      label: '中风险'\n    }, {\n      value: '低风险',\n      label: '低风险'\n    }];\n\n    // 初始化\n    onMounted(function () {\n      fetchFraudGroups();\n    });\n\n    // 获取欺诈团体数据\n    var fetchFraudGroups = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              loading.value = true;\n              try {\n                // 模拟API调用\n                setTimeout(function () {\n                  fraudGroups.value = generateMockFraudGroups();\n                  total.value = 28;\n                  loading.value = false;\n                }, 800);\n              } catch (error) {\n                ElMessage.error('获取数据失败');\n                loading.value = false;\n              }\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function fetchFraudGroups() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 生成模拟数据\n    var generateMockFraudGroups = function generateMockFraudGroups() {\n      var mockData = [];\n      var fraudTypes = fraudTypeOptions.map(function (option) {\n        return option.value;\n      });\n      var riskLevels = ['高风险', '中风险', '低风险'];\n      var hospitals = hospitalOptions.map(function (option) {\n        return option.label;\n      });\n      var groupNamePrefixes = ['联合', '串通', '医药', '医护', '医患', '医共体', '医诊所'];\n      for (var i = 1; i <= 9; i++) {\n        var fraudType = fraudTypes[Math.floor(Math.random() * fraudTypes.length)];\n        var riskLevel = i <= 3 ? '高风险' : i <= 6 ? '中风险' : '低风险';\n        var hospital = hospitals[Math.floor(Math.random() * hospitals.length)];\n        var memberCount = Math.floor(Math.random() * 10) + 3;\n        var eventCount = Math.floor(Math.random() * 20) + 5;\n        var totalAmount = Math.random() * 500000 + 50000;\n        var groupNamePrefix = groupNamePrefixes[Math.floor(Math.random() * groupNamePrefixes.length)];\n        var groupName = \"\".concat(groupNamePrefix).concat(fraudType, \"\\u6B3A\\u8BC8\\u56E2\\u4F53 #\").concat(i);\n        mockData.push({\n          id: 'G' + String(i).padStart(3, '0'),\n          groupName: groupName,\n          fraudType: fraudType,\n          riskLevel: riskLevel,\n          hospital: hospital,\n          memberCount: memberCount,\n          eventCount: eventCount,\n          totalAmount: totalAmount,\n          description: generateDescription(fraudType, hospital)\n        });\n      }\n      return mockData;\n    };\n\n    // 生成欺诈描述\n    var generateDescription = function generateDescription(fraudType, hospital) {\n      var descriptions = {\n        '虚假住院': \"\\u5728\".concat(hospital, \"\\u5185\\u5B58\\u5728\\u5927\\u91CF\\u865A\\u5047\\u4F4F\\u9662\\u8BB0\\u5F55\\uFF0C\\u60A3\\u8005\\u5B9E\\u9645\\u672A\\u4F4F\\u9662\\u4F46\\u7533\\u62A5\\u4F4F\\u9662\\u8D39\\u7528\"),\n        '药品回扣': \"\\u533B\\u751F\\u5F00\\u5177\\u7279\\u5B9A\\u5382\\u5546\\u836F\\u54C1\\u83B7\\u53D6\\u56DE\\u6263\\uFF0C\\u836F\\u54C1\\u4F7F\\u7528\\u91CF\\u660E\\u663E\\u9AD8\\u4E8E\\u540C\\u7EA7\\u533B\\u9662\",\n        '过度医疗': \"\\u60A3\\u8005\\u63A5\\u53D7\\u591A\\u9879\\u4E0D\\u5FC5\\u8981\\u7684\\u68C0\\u67E5\\u548C\\u6CBB\\u7597\\uFF0C\\u533B\\u7597\\u8D39\\u7528\\u663E\\u8457\\u9AD8\\u4E8E\\u540C\\u7C7B\\u75BE\\u75C5\\u5E73\\u5747\\u6C34\\u5E73\",\n        '分解住院': \"\\u5C06\\u5E94\\u5F53\\u4E00\\u6B21\\u4F4F\\u9662\\u7684\\u8BCA\\u7597\\u5206\\u89E3\\u4E3A\\u591A\\u6B21\\u4F4F\\u9662\\uFF0C\\u9A97\\u53D6\\u533B\\u4FDD\\u57FA\\u91D1\"\n      };\n      return descriptions[fraudType] || \"\".concat(hospital, \"\\u5185\\u53D1\\u73B0\\u56E2\\u4F53\\u6B3A\\u8BC8\\u884C\\u4E3A\\uFF0C\\u6D89\\u53CA\\u591A\\u4EBA\\u53C2\\u4E0E\");\n    };\n\n    // 查看团体详情\n    var viewGroupDetails = function viewGroupDetails(group) {\n      selectedGroupDetails.value = _objectSpread(_objectSpread({}, group), {}, {\n        members: generateMockMembers(group.memberCount),\n        events: generateMockEvents(group.eventCount, group.fraudType)\n      });\n      detailsVisible.value = true;\n    };\n\n    // 开始调查\n    var startInvestigation = function startInvestigation(group) {\n      ElMessage.success(\"\\u5DF2\\u542F\\u52A8\\u5BF9\\\"\".concat(group.groupName, \"\\\"\\u7684\\u8C03\\u67E5\\u7A0B\\u5E8F\"));\n    };\n\n    // 生成模拟成员数据\n    var generateMockMembers = function generateMockMembers(count) {\n      var members = [];\n      var roles = ['主要涉案人', '协助者', '参与者'];\n      for (var i = 1; i <= count; i++) {\n        var roleIndex = i === 1 ? 0 : i <= 3 ? 1 : 2;\n        members.push({\n          id: 'M' + i,\n          name: '成员 #' + i,\n          role: roles[roleIndex],\n          hospital: hospitalOptions[Math.floor(Math.random() * hospitalOptions.length)].label,\n          department: ['内科', '外科', '妇科', '儿科', '骨科'][Math.floor(Math.random() * 5)],\n          eventCount: Math.floor(Math.random() * 20) + 2,\n          totalAmount: Math.random() * 200000 + 5000,\n          description: '该成员' + (roleIndex === 0 ? '组织并参与多起欺诈活动' : roleIndex === 1 ? '协助实施欺诈行为' : '参与部分欺诈活动')\n        });\n      }\n      return members;\n    };\n\n    // 生成模拟事件数据\n    var generateMockEvents = function generateMockEvents(count, fraudType) {\n      var events = [];\n      var eventTypes = ['虚假住院', '药品回扣', '过度医疗', '资料造假', '分解住院'];\n      var statuses = ['已确认', '调查中'];\n      for (var i = 1; i <= Math.min(count, 10); i++) {\n        var useMainType = Math.random() > 0.3;\n        var typeIndex = useMainType ? eventTypes.indexOf(fraudType) : Math.floor(Math.random() * eventTypes.length);\n        var type = eventTypes[typeIndex >= 0 ? typeIndex : 0];\n        var date = new Date(2023, Math.floor(Math.random() * 12), Math.floor(Math.random() * 28) + 1);\n        var amount = Math.random() * 50000 + 1000;\n        events.push({\n          id: 'E' + i,\n          title: '疑似' + type + '事件',\n          type: type,\n          date: formatDate(date),\n          amount: amount,\n          description: '在' + formatDate(date) + '发现的' + type + '行为，' + ['涉及多名患者的虚假住院记录', '医生频繁开具特定厂商药品获取回扣', '大量不必要的检查和治疗', '伪造病历和医疗文档', '人为分解住院周期'][typeIndex],\n          status: i <= 5 ? '已确认' : '调查中'\n        });\n      }\n      return events;\n    };\n\n    // 查询处理\n    var handleSearch = function handleSearch() {\n      if (dateRange.value && dateRange.value.length === 2) {\n        queryParams.startDate = dateRange.value[0];\n        queryParams.endDate = dateRange.value[1];\n      }\n      currentPage.value = 1;\n      fetchFraudGroups();\n    };\n\n    // 重置查询\n    var resetQuery = function resetQuery() {\n      Object.keys(queryParams).forEach(function (key) {\n        queryParams[key] = '';\n      });\n      dateRange.value = [];\n      currentPage.value = 1;\n      fetchFraudGroups();\n    };\n\n    // 分页处理\n    var handlePageChange = function handlePageChange(val) {\n      currentPage.value = val;\n      fetchFraudGroups();\n    };\n    var handleSizeChange = function handleSizeChange(val) {\n      pageSize.value = val;\n      currentPage.value = 1;\n      fetchFraudGroups();\n    };\n\n    // 辅助函数\n    var formatDate = function formatDate(date) {\n      return \"\".concat(date.getFullYear(), \"-\").concat(String(date.getMonth() + 1).padStart(2, '0'), \"-\").concat(String(date.getDate()).padStart(2, '0'));\n    };\n    var formatCurrency = function formatCurrency(value) {\n      return parseFloat(value).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n    };\n    var getEventTagType = function getEventTagType(type) {\n      if (type === '虚假住院' || type === '资料造假') return 'danger';\n      if (type === '药品回扣') return 'warning';\n      if (type === '过度医疗') return 'success';\n      return 'info';\n    };\n    var __returned__ = {\n      loading: loading,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      total: total,\n      fraudGroups: fraudGroups,\n      dateRange: dateRange,\n      detailsVisible: detailsVisible,\n      selectedGroupDetails: selectedGroupDetails,\n      queryParams: queryParams,\n      hospitalOptions: hospitalOptions,\n      fraudTypeOptions: fraudTypeOptions,\n      riskLevelOptions: riskLevelOptions,\n      fetchFraudGroups: fetchFraudGroups,\n      generateMockFraudGroups: generateMockFraudGroups,\n      generateDescription: generateDescription,\n      viewGroupDetails: viewGroupDetails,\n      startInvestigation: startInvestigation,\n      generateMockMembers: generateMockMembers,\n      generateMockEvents: generateMockEvents,\n      handleSearch: handleSearch,\n      resetQuery: resetQuery,\n      handlePageChange: handlePageChange,\n      handleSizeChange: handleSizeChange,\n      formatDate: formatDate,\n      formatCurrency: formatCurrency,\n      getEventTagType: getEventTagType,\n      ref: ref,\n      reactive: reactive,\n      onMounted: onMounted,\n      get Search() {\n        return Search;\n      },\n      get Refresh() {\n        return Refresh;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","Search","Refresh","ElMessage","loading","currentPage","pageSize","total","fraudGroups","dateRange","detailsVisible","selectedGroupDetails","queryParams","hospital","fraudType","riskLevel","startDate","endDate","hospitalOptions","value","label","fraudTypeOptions","riskLevelOptions","fetchFraudGroups","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","setTimeout","generateMockFraudGroups","error","stop","apply","arguments","mockData","fraudTypes","map","option","riskLevels","hospitals","groupNamePrefixes","i","Math","floor","random","length","memberCount","eventCount","totalAmount","groupNamePrefix","groupName","concat","push","id","String","padStart","description","generateDescription","descriptions","viewGroupDetails","group","_objectSpread","members","generateMockMembers","events","generateMockEvents","startInvestigation","success","count","roles","roleIndex","name","role","department","eventTypes","statuses","min","useMainType","typeIndex","indexOf","type","date","Date","amount","title","formatDate","status","handleSearch","resetQuery","Object","keys","forEach","key","handlePageChange","val","handleSizeChange","getFullYear","getMonth","getDate","formatCurrency","parseFloat","toFixed","replace","getEventTagType"],"sources":["D:/Code/Project/Medical Insurance Anti-Fraud System/frontend/src/views/GroupFraudDetection.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-card shadow=\"hover\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span class=\"title\">团体欺诈识别</span>\r\n          <el-tag type=\"danger\">高级分析</el-tag>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 搜索表单 -->\r\n      <el-form :inline=\"true\" class=\"search-form\">\r\n        <el-form-item label=\"医疗机构\">\r\n          <el-select v-model=\"queryParams.hospital\" placeholder=\"请选择\" clearable>\r\n            <el-option v-for=\"item in hospitalOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"欺诈类型\">\r\n          <el-select v-model=\"queryParams.fraudType\" placeholder=\"请选择\" clearable>\r\n            <el-option v-for=\"item in fraudTypeOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"风险等级\">\r\n          <el-select v-model=\"queryParams.riskLevel\" placeholder=\"请选择\" clearable>\r\n            <el-option v-for=\"item in riskLevelOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"事件周期\">\r\n          <el-date-picker\r\n            v-model=\"dateRange\"\r\n            type=\"daterange\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" :icon=\"Search\" @click=\"handleSearch\">查询</el-button>\r\n          <el-button :icon=\"Refresh\" @click=\"resetQuery\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 发现的欺诈团体 -->\r\n      <el-row :gutter=\"20\" class=\"group-cards\">\r\n        <el-col :span=\"8\" v-for=\"group in fraudGroups\" :key=\"group.id\">\r\n          <el-card \r\n            shadow=\"hover\" \r\n            class=\"group-card\"\r\n            :class=\"{ 'high-risk': group.riskLevel === '高风险' }\"\r\n          >\r\n            <template #header>\r\n              <div class=\"group-header\">\r\n                <span class=\"group-title\">{{ group.groupName }}</span>\r\n                <el-tag \r\n                  :type=\"group.riskLevel === '高风险' ? 'danger' : group.riskLevel === '中风险' ? 'warning' : 'success'\"\r\n                >\r\n                  {{ group.riskLevel }}\r\n                </el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"group-content\">\r\n              <div class=\"group-info\">\r\n                <div class=\"info-item\">\r\n                  <div class=\"info-label\">成员数量</div>\r\n                  <div class=\"info-value\">{{ group.memberCount }}</div>\r\n                </div>\r\n                <div class=\"info-item\">\r\n                  <div class=\"info-label\">事件次数</div>\r\n                  <div class=\"info-value\">{{ group.eventCount }}</div>\r\n                </div>\r\n                <div class=\"info-item\">\r\n                  <div class=\"info-label\">累计金额</div>\r\n                  <div class=\"info-value\">{{ formatCurrency(group.totalAmount) }}元</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"group-description\">\r\n                <div class=\"description-title\">欺诈特征:</div>\r\n                <div class=\"description-content\">{{ group.description }}</div>\r\n              </div>\r\n              <div class=\"group-actions\">\r\n                <el-button type=\"primary\" size=\"small\" @click=\"viewGroupDetails(group)\">查看详情</el-button>\r\n                <el-button type=\"warning\" size=\"small\" @click=\"startInvestigation(group)\">立案调查</el-button>\r\n              </div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 分页器 -->\r\n      <el-pagination\r\n        v-model:current-page=\"currentPage\"\r\n        v-model:page-size=\"pageSize\"\r\n        :page-sizes=\"[9, 18, 27]\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        @size-change=\"handleSizeChange\"\r\n        class=\"pagination\"\r\n      />\r\n    </el-card>\r\n\r\n    <!-- 详情对话框 -->\r\n    <el-dialog\r\n      v-model=\"detailsVisible\"\r\n      title=\"团体欺诈详情\"\r\n      width=\"80%\"\r\n      destroy-on-close\r\n    >\r\n      <div v-if=\"selectedGroupDetails\" class=\"group-details\">\r\n        <div class=\"details-header\">\r\n          <h2>{{ selectedGroupDetails.groupName }}</h2>\r\n          <div>\r\n            <el-tag :type=\"selectedGroupDetails.riskLevel === '高风险' ? 'danger' : 'warning'\">\r\n              {{ selectedGroupDetails.riskLevel }}\r\n            </el-tag>\r\n            <el-tag type=\"info\" style=\"margin-left: 10px;\">\r\n              成员数: {{ selectedGroupDetails.memberCount }}\r\n            </el-tag>\r\n          </div>\r\n        </div>\r\n        \r\n        <el-divider content-position=\"center\">欺诈团体成员</el-divider>\r\n        \r\n        <el-table :data=\"selectedGroupDetails.members\" border stripe>\r\n          <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n          <el-table-column prop=\"name\" label=\"成员\" width=\"120\" />\r\n          <el-table-column prop=\"role\" label=\"角色\" width=\"120\">\r\n            <template #default=\"scope\">\r\n              <el-tag :type=\"scope.row.role === '主要涉案人' ? 'danger' : scope.row.role === '协助者' ? 'warning' : 'info'\">\r\n                {{ scope.row.role }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"hospital\" label=\"医疗机构\" width=\"180\" show-overflow-tooltip />\r\n          <el-table-column prop=\"department\" label=\"科室\" width=\"120\" />\r\n          <el-table-column prop=\"eventCount\" label=\"事件数\" width=\"100\" align=\"right\" />\r\n          <el-table-column prop=\"totalAmount\" label=\"涉及金额\" width=\"150\" align=\"right\">\r\n            <template #default=\"scope\">\r\n              {{ formatCurrency(scope.row.totalAmount) }}元\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"description\" label=\"描述\" min-width=\"200\" show-overflow-tooltip />\r\n        </el-table>\r\n        \r\n        <el-divider content-position=\"center\">欺诈事件记录</el-divider>\r\n        \r\n        <el-table :data=\"selectedGroupDetails.events\" border stripe>\r\n          <el-table-column prop=\"id\" label=\"事件ID\" width=\"80\" />\r\n          <el-table-column prop=\"title\" label=\"事件标题\" width=\"180\" show-overflow-tooltip />\r\n          <el-table-column prop=\"type\" label=\"类型\" width=\"120\">\r\n            <template #default=\"scope\">\r\n              <el-tag :type=\"getEventTagType(scope.row.type)\">\r\n                {{ scope.row.type }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"date\" label=\"发生时间\" width=\"150\" />\r\n          <el-table-column prop=\"amount\" label=\"涉及金额\" width=\"150\" align=\"right\">\r\n            <template #default=\"scope\">\r\n              {{ formatCurrency(scope.row.amount) }}元\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"description\" label=\"事件描述\" min-width=\"250\" show-overflow-tooltip />\r\n          <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n            <template #default=\"scope\">\r\n              <el-tag :type=\"scope.row.status === '已确认' ? 'danger' : 'warning'\">\r\n                {{ scope.row.status }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { Search, Refresh } from '@element-plus/icons-vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n// 状态数据\r\nconst loading = ref(false)\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(9)\r\nconst total = ref(0)\r\nconst fraudGroups = ref([])\r\nconst dateRange = ref([])\r\nconst detailsVisible = ref(false)\r\nconst selectedGroupDetails = ref(null)\r\n\r\n// 查询参数\r\nconst queryParams = reactive({\r\n  hospital: '',\r\n  fraudType: '',\r\n  riskLevel: '',\r\n  startDate: '',\r\n  endDate: ''\r\n})\r\n\r\n// 选项数据\r\nconst hospitalOptions = [\r\n  { value: 'H001', label: '第一人民医院' },\r\n  { value: 'H002', label: '中心医院' },\r\n  { value: 'H003', label: '妇幼保健院' },\r\n  { value: 'H004', label: '协和医院' }\r\n]\r\n\r\nconst fraudTypeOptions = [\r\n  { value: '虚假住院', label: '虚假住院' },\r\n  { value: '药品回扣', label: '药品回扣' },\r\n  { value: '过度医疗', label: '过度医疗' },\r\n  { value: '分解住院', label: '分解住院' }\r\n]\r\n\r\nconst riskLevelOptions = [\r\n  { value: '高风险', label: '高风险' },\r\n  { value: '中风险', label: '中风险' },\r\n  { value: '低风险', label: '低风险' }\r\n]\r\n\r\n// 初始化\r\nonMounted(() => {\r\n  fetchFraudGroups()\r\n})\r\n\r\n// 获取欺诈团体数据\r\nconst fetchFraudGroups = async () => {\r\n  loading.value = true\r\n  try {\r\n    // 模拟API调用\r\n    setTimeout(() => {\r\n      fraudGroups.value = generateMockFraudGroups()\r\n      total.value = 28\r\n      loading.value = false\r\n    }, 800)\r\n  } catch (error) {\r\n    ElMessage.error('获取数据失败')\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 生成模拟数据\r\nconst generateMockFraudGroups = () => {\r\n  const mockData = []\r\n  const fraudTypes = fraudTypeOptions.map(option => option.value)\r\n  const riskLevels = ['高风险', '中风险', '低风险']\r\n  const hospitals = hospitalOptions.map(option => option.label)\r\n  \r\n  const groupNamePrefixes = [\r\n    '联合', '串通', '医药', '医护', '医患', '医共体', '医诊所'\r\n  ]\r\n  \r\n  for (let i = 1; i <= 9; i++) {\r\n    const fraudType = fraudTypes[Math.floor(Math.random() * fraudTypes.length)]\r\n    const riskLevel = i <= 3 ? '高风险' : i <= 6 ? '中风险' : '低风险'\r\n    const hospital = hospitals[Math.floor(Math.random() * hospitals.length)]\r\n    const memberCount = Math.floor(Math.random() * 10) + 3\r\n    const eventCount = Math.floor(Math.random() * 20) + 5\r\n    const totalAmount = Math.random() * 500000 + 50000\r\n    \r\n    const groupNamePrefix = groupNamePrefixes[Math.floor(Math.random() * groupNamePrefixes.length)]\r\n    const groupName = `${groupNamePrefix}${fraudType}欺诈团体 #${i}`\r\n    \r\n    mockData.push({\r\n      id: 'G' + String(i).padStart(3, '0'),\r\n      groupName: groupName,\r\n      fraudType: fraudType,\r\n      riskLevel: riskLevel,\r\n      hospital: hospital,\r\n      memberCount: memberCount,\r\n      eventCount: eventCount,\r\n      totalAmount: totalAmount,\r\n      description: generateDescription(fraudType, hospital)\r\n    })\r\n  }\r\n  return mockData\r\n}\r\n\r\n// 生成欺诈描述\r\nconst generateDescription = (fraudType, hospital) => {\r\n  const descriptions = {\r\n    '虚假住院': `在${hospital}内存在大量虚假住院记录，患者实际未住院但申报住院费用`,\r\n    '药品回扣': `医生开具特定厂商药品获取回扣，药品使用量明显高于同级医院`,\r\n    '过度医疗': `患者接受多项不必要的检查和治疗，医疗费用显著高于同类疾病平均水平`,\r\n    '分解住院': `将应当一次住院的诊疗分解为多次住院，骗取医保基金`\r\n  }\r\n  \r\n  return descriptions[fraudType] || `${hospital}内发现团体欺诈行为，涉及多人参与`\r\n}\r\n\r\n// 查看团体详情\r\nconst viewGroupDetails = (group) => {\r\n  selectedGroupDetails.value = {\r\n    ...group,\r\n    members: generateMockMembers(group.memberCount),\r\n    events: generateMockEvents(group.eventCount, group.fraudType)\r\n  }\r\n  detailsVisible.value = true\r\n}\r\n\r\n// 开始调查\r\nconst startInvestigation = (group) => {\r\n  ElMessage.success(`已启动对\"${group.groupName}\"的调查程序`)\r\n}\r\n\r\n// 生成模拟成员数据\r\nconst generateMockMembers = (count) => {\r\n  const members = []\r\n  const roles = ['主要涉案人', '协助者', '参与者']\r\n  \r\n  for (let i = 1; i <= count; i++) {\r\n    const roleIndex = i === 1 ? 0 : (i <= 3 ? 1 : 2)\r\n    members.push({\r\n      id: 'M' + i,\r\n      name: '成员 #' + i,\r\n      role: roles[roleIndex],\r\n      hospital: hospitalOptions[Math.floor(Math.random() * hospitalOptions.length)].label,\r\n      department: ['内科', '外科', '妇科', '儿科', '骨科'][Math.floor(Math.random() * 5)],\r\n      eventCount: Math.floor(Math.random() * 20) + 2,\r\n      totalAmount: Math.random() * 200000 + 5000,\r\n      description: '该成员' + (roleIndex === 0 ? '组织并参与多起欺诈活动' : roleIndex === 1 ? '协助实施欺诈行为' : '参与部分欺诈活动')\r\n    })\r\n  }\r\n  \r\n  return members\r\n}\r\n\r\n// 生成模拟事件数据\r\nconst generateMockEvents = (count, fraudType) => {\r\n  const events = []\r\n  const eventTypes = ['虚假住院', '药品回扣', '过度医疗', '资料造假', '分解住院']\r\n  const statuses = ['已确认', '调查中']\r\n  \r\n  for (let i = 1; i <= Math.min(count, 10); i++) {\r\n    const useMainType = Math.random() > 0.3\r\n    const typeIndex = useMainType ? eventTypes.indexOf(fraudType) : Math.floor(Math.random() * eventTypes.length)\r\n    const type = eventTypes[typeIndex >= 0 ? typeIndex : 0]\r\n    const date = new Date(2023, Math.floor(Math.random() * 12), Math.floor(Math.random() * 28) + 1)\r\n    const amount = Math.random() * 50000 + 1000\r\n    \r\n    events.push({\r\n      id: 'E' + i,\r\n      title: '疑似' + type + '事件',\r\n      type: type,\r\n      date: formatDate(date),\r\n      amount: amount,\r\n      description: '在' + formatDate(date) + '发现的' + type + '行为，' + \r\n        ['涉及多名患者的虚假住院记录', '医生频繁开具特定厂商药品获取回扣', \r\n         '大量不必要的检查和治疗', '伪造病历和医疗文档', '人为分解住院周期'][typeIndex],\r\n      status: i <= 5 ? '已确认' : '调查中'\r\n    })\r\n  }\r\n  \r\n  return events\r\n}\r\n\r\n// 查询处理\r\nconst handleSearch = () => {\r\n  if (dateRange.value && dateRange.value.length === 2) {\r\n    queryParams.startDate = dateRange.value[0]\r\n    queryParams.endDate = dateRange.value[1]\r\n  }\r\n  \r\n  currentPage.value = 1\r\n  fetchFraudGroups()\r\n}\r\n\r\n// 重置查询\r\nconst resetQuery = () => {\r\n  Object.keys(queryParams).forEach(key => {\r\n    queryParams[key] = ''\r\n  })\r\n  dateRange.value = []\r\n  currentPage.value = 1\r\n  fetchFraudGroups()\r\n}\r\n\r\n// 分页处理\r\nconst handlePageChange = (val) => {\r\n  currentPage.value = val\r\n  fetchFraudGroups()\r\n}\r\n\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  currentPage.value = 1\r\n  fetchFraudGroups()\r\n}\r\n\r\n// 辅助函数\r\nconst formatDate = (date) => {\r\n  return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\r\n}\r\n\r\nconst formatCurrency = (value) => {\r\n  return parseFloat(value).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\r\n}\r\n\r\nconst getEventTagType = (type) => {\r\n  if (type === '虚假住院' || type === '资料造假') return 'danger'\r\n  if (type === '药品回扣') return 'warning'\r\n  if (type === '过度医疗') return 'success'\r\n  return 'info'\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 2000px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.title {\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  color: var(--el-color-primary);\r\n}\r\n\r\n.search-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.group-cards {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.group-card {\r\n  margin-bottom: 20px;\r\n  border: 1px solid #EBEEF5;\r\n  height: 100%;\r\n}\r\n\r\n.high-risk {\r\n  border: 1px solid #F56C6C;\r\n}\r\n\r\n.group-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.group-title {\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n}\r\n\r\n.group-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n\r\n.group-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.info-item {\r\n  text-align: center;\r\n  flex: 1;\r\n}\r\n\r\n.info-label {\r\n  font-size: 14px;\r\n  color: #909399;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.info-value {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.group-description {\r\n  margin-bottom: 15px;\r\n  flex: 1;\r\n}\r\n\r\n.description-title {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n  color: #606266;\r\n}\r\n\r\n.description-content {\r\n  font-size: 14px;\r\n  color: #606266;\r\n  line-height: 1.5;\r\n}\r\n\r\n.group-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.details-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.details-header h2 {\r\n  margin: 0;\r\n  color: #303133;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}